install.packages("project")
install.packages("ProjectTemplate")
install.packages("ProjectTemplate")
install.packages("ggplot2")
install.packages("ProjectTemplate")
library(ProjectTemplate)
install.packages("ProjectTemplate")
devtools::install_github('johnmyleswhite/ProjectTemplate')
installed.packages("devtools")
install.packages("devtools")
##------ [/media/tian/Win7/Users/willin/Dropbox/workbox/R] Mon Apr  7 23:25:30 2014 ------##
library(ProjectTemplate)
##------ [/home/tian/Dropbox/workbox/R] Tue Apr  8 14:37:54 2014 ------##
install.packages("rgdal")
install.packages("rgdal")
install.packages("devtools")
##------ [/home/tian/Dropbox/workbox/R] Tue Apr  8 21:35:40 2014 ------##
install.packages("rgdal")
install.packages("~/Dropbox/soft/linux/R/release/rgdal_0.8-16.tar.gz", repos = NULL, type = "source")
##------ [/home/tian/Dropbox/workbox/R] Tue Apr  8 21:43:51 2014 ------##
dir0.v  <- "phdTheis"
dir1.v  <- c("frontmatter","chapters","backmatter")
front.v <- c("title","cover","dedication","abstract","acknowlegment","toc","glossary","accronmys","softlist","tablelist", "figurelist")
back.v  <- c("appendixA","appendixB","appendixC","declaration")
dir.create(dir0.v)
source('~/Dropbox/00PHD/00PHD/phdProject.R', echo=TRUE)
source('~/Dropbox/00PHD/00PHD/phdProject.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 00:21:42 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 10:02:08 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 10:07:00 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 12:11:21 2014 ------##
write.csv
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 14:37:34 2014 ------##
phd.project()
getwd()
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 14:43:49 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 14:44:31 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 14:45:04 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 14:47:44 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 14:57:02 2014 ------##
df <- readRDS("Hokkaido_bhmss_20140312_155637.Rds")
pwd
pwd()
##------ [/home/tian/Dropbox/workbox/R] Thu Apr 10 15:03:01 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Fri Apr 11 13:19:58 2014 ------##
load("~/Dropbox//Downloading/minimal_geostat.RData")
View(v)
View(vmf)
##------ [/home/tian/Dropbox/workbox/R] Fri Apr 11 15:14:07 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Fri Apr 11 17:09:23 2014 ------##
##------ Fri Apr 11 21:35:08 2014 ------##
install.packages("KernSmooth")
copyright(KernSmooth)
copyrights(KernSmooth)
require(KernSmooth)
dfd  <-  read.csv("~/Dropbox/workbox/R/Coursera/getdata-002//getdata-data-ss06hid.csv")
df  <-  read.csv("~/Dropbox/workbox/R/Coursera/getdata-002//getdata-data-ss06hid.csv")
ht(df)
df  <-  read.csv("~/Dropbox/workbox/R/Coursera/getdata-002//getdata-data-ss06hid.csv")
ht(df)
attach(df)
##------ [/home/tian/Dropbox/workbox/R] Mon Apr 14 16:13:42 2014 ------##
y  <- 10
x + y
#+END_SRC
#+BEGIN_SRC R
#
x  <- 20
y  <- 10
x + y
#+END_SRC
#+BEGIN_SRC R
#
x  <- 20
y  <- 10
x + y
#+END_SRC
source('~/.active-rstudio-document', echo=TRUE)
##------ [/home/tian/Dropbox/workbox/R] Tue Apr 15 16:50:17 2014 ------##
phd.project(kyoto)
phd.project("kyoto")
##------ [/home/tian/Dropbox/workbox/R] Wed Apr 16 14:01:28 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Mon Apr 21 13:48:24 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Fri Apr 25 15:06:48 2014 ------##
install.packages("MODIS")
install.packages("~/Dropbox/soft/linux/R/tar,gz/MODISTools_0.93.9.tar.gz", repos = NULL, type = "source")
##------ [/home/tian/Dropbox/workbox/R] Wed May  7 15:41:40 2014 ------##
install.packages("latticExtar")
##------ Thu May 08 12:35:59 2014 ------##
##------ Sun May 11 21:46:25 2014 ------##
pch
pch()
print(pch())
colors()
##------ Mon May 12 18:06:16 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Tue May 20 12:08:05 2014 ------##
##------ Thu May 22 17:06:22 2014 ------##
install.packages("plot3D")
library(plot3D)
vignette(plot3D)
vignette("" packages = "plot3D")
vignette("" package = "plot3D")
vignette("volcano" package = "plot3D")
vignette("volcano",package = "plot3D")
vol  <- volcano()
vol  <- data(volcano)
Volcano <- volcano[seq(1, nrow(volcano), by = 3),
seq(1, ncol(volcano), by = 3)]
View(Volcano)
volcano()
par(mfrow = c(3, 3), mar = c(3, 3, 3, 2))
contour2D(Volcano, lwd = 2, colkey = FALSE)
contour2D(Volcano, lwd = 2)
image2D(Volcano, clab = "m")
image2D(Volcano, shade = 0.4)
image2D(Volcano, facets = FALSE)
image2D(Volcano, contour = TRUE)
image2D(Volcano, rasterImage = TRUE, contour = list(lwd = 2, col = jet.col(11)))
image2D(Volcano, theta = 30, NAcol = "black")
image2D(Volcano, lighting = TRUE, rasterImage = TRUE,
contour = list(col = "white", labcex = 0.8, lwd = 3, alpha = 0.5))
```
par(mfrow = c(3, 3),
par(mfrow = c(3, 3),mar = c(2, 2, 2, 2))
persp(Volcano)
par(mfrow = c(3, 3),mar = c(2, 2, 2, 2))
persp(Volcano)
persp(Volcano, theta
persp3D(z = Volcano,
mar = c(2, 2, 2, 2))
= 40, phi = 40, col = "gold", border = NA, shade = 0.5)
clab = "m")
clab = "m", shade = 0.2)
facets = FALSE)
facets = FALSE, curtain = TRUE)
col = "white", shade = 0.5)
col = ramp.col(c("white", "black")), b
```
pdf  <- vignette("volcano",package = "plot3D")
readline(pdf)
pdf2  <- readline(pdf)
Volcano <- volcano[seq(1, nrow(volcano), by = 3),
seq(1, ncol(volcano), by = 3)]
View(Volcano)
vignette("volcano",package = "plot3D")
##------ [/home/tian/Dropbox/workbox/R] Fri May 23 09:56:12 2014 ------##
##------ Fri May 23 14:08:35 2014 ------##
d <- readRDS("./data/bhi_Hokkaido_20140310_134329.Rds")
getwd()
##------ Sat May 24 21:27:25 2014 ------##
y2 = c(1:12) +12
y2
outer(1:12)
outer(1:12,1:12)
outer(1:12, 1:12)
outer(1:12, 2:12)
outer(1:12, 2:12, "-")
outer(1:12, 1:12, "-")
outer(1:72, 1:72, "-")
m  <- outer(1:72, 1:72, "-")
View(m)
diag(m)
m[which(m < 0 )] = 0
m1  <- m[which(m < 0 )] = 0
m  <- outer(1:72, 1:72, "-")
diag(m)
m1  <- m[which(m < 0 )] = 0
m[which(m < 0 )] = 0
View(m)
m  <- outer(1:72, 1:72, "-")
m[which(m < 0 )] * (-1)
View(m)
m  <- outer(1:72, 1:72, "-")
m[which(m < 0 )] * (-1)
m1  <- as.character(m)
gsub("-","" m1)
class(m)
mode(m)
mode(m)  <- "character"
gsub("-","" m)
gsub("-","", m)
mode(m1)  <- "numeric"
m  <- outer(1:72, 1:72, "-")
mode(m)  <- "character"
m1  <- gsub("-","", m)
m1  <- as.numeric(gsub("-","", m))
m  <- outer(1:72, 1:72, "-")
qr(m)
m  <- outer(1:72, 1:72, "+")
View(m)
m  <- outer(1:72, 1:72, "-")
qr.fitted(m)
m  <- outer(1:72, 1:72, "-")
mode(m)  <- "character"
View(m)
m1  <- gsub("-","", m)
View(`m1`)
as.numeric(m1)
m1  <- as.matrix(as.numeric(gsub("-","", m)))
View(`m1`)
m1  <- as.numeric(gsub("-","", m))
m1  <- gsub("-","", m)
mode(m1)  <- "numeric"
View(`m1`)
qr.fitted(m1)
qr(m1)
qr.fitted(m1)
qr  <- qr(m1)
qr.fitted(qr)
qr.fitted(qr, 1)
qr.fitted(qr, rep(1,72))
qr.fitted(qr, rnorm(72))
set.seed(1)
y  <- rnorm(72)
qr.fitted(qr, y)
y
##------ Sun May 25 16:14:13 2014 ------##
##------ Sun May 25 16:50:13 2014 ------##
source('~/Dropbox/symposium/Geoinform2014/studyArea.R', echo=TRUE)
##------ Tue May 27 19:55:37 2014 ------##
##------ Tue May 27 20:06:56 2014 ------##
citation()
citation(raster)
citation("raster")
citation("rgdal")
citation("sp")
citation("rgeos")
citation("ggplot2")
##------ Sat May 31 16:42:36 2014 ------##
##------ Sun Jun 01 22:36:54 2014 ------##
##------ Mon Jun 02 18:13:40 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Wed Jun  4 14:28:10 2014 ------##
##------ Tue Jun 10 16:50:37 2014 ------##
##------ Tue Jun 10 21:41:23 2014 ------##
##------ Wed Jun 11 14:30:52 2014 ------##
##------ Thu Jun 12 11:38:49 2014 ------##
##------ [/home/tian/Dropbox/workbox/R] Tue Jun 17 14:23:05 2014 ------##
##------ Sat Jun 21 15:28:42 2014 ------##
library(raster)
library(maptools)
library(rgdal)
library(animation)
library(RColorBrewer)
library (ggplot2)
library(rgeos)
malb<-getData("GADM", country="MWI", level=1)
malp<-getData("worldclim", var="prec", res=0.5, lon=35, lat=-14)
malpe<-extract(malp,malb,fun=mean, na.rm=T)
malpe<-data.frame(malpe)
malb@data<-malpe
dat<-colnames(malb@data)
malb@data$id<-row.names(malb@data)
malbf<-fortify(malb, region="id")
malb.df<-merge(malbf,malb@data, by="id")
colnames(malb.df)[8:19]<-c("January","February","March","April","May","June","July","August","September","October","November","December")
col<-brewer.pal(9,"Spectral")
for (i in 8:19){
var<-colnames(malb.df)[i]
p<-ggplot(malb.df, aes(long,lat, group=group))+geom_polygon(aes_string(fill=var))+coord_equal()
p<-p+geom_polygon(data=malb, aes(long,lat.group=group),fill=NA, colour="black")
p<-p+scale_fill_gradientn("Rainfall",limits=c(0,330),guide="legend", breaks=seq(0,330,30), colours=col)
p<-p+theme_bw()+ggtitle(var)
print(p)
ggsave(file=paste("pr",i,".png", sep=""))
}
files = sprintf('pr%d.png', 8:19)
im.convert(files, output = 'Rainfall.gif')
View(malpe)
View(malb.df)
View(malbf)
getwd()
malb<-getData("GADM", country="JPN", level=1)
malp<-getData("worldclim", var="prec", res=0.5, lon=138, lat=38)
malpe<-extract(malp,malb,fun=mean, na.rm=T)
##------ Sat Jun 21 16:22:28 2014 ------##
##------ Sat Jun 21 16:25:03 2014 ------##
source('~/Dropbox/workbox/R/GeoR/rainfallAnimation.R', echo=TRUE)
##------ Sun Jun 22 20:40:52 2014 ------##
install.packages(xlsx)
install.packages('xlsx')
##------ [/home/tian/Dropbox/src/R] Wed Jun 25 12:46:01 2014 ------##
source('~/Dropbox/config/R/rInstall/ctvPkGs.R', echo=TRUE)
if(!require(ctv)){
install.packages("ctv")
} else {
install.views("Spatial")
}
install.packages("xlsx")
install.packages("gdata")
library(gdata)
vol110  <- xlsx.reader("volcano_list.xls","~/Dropbox/02data/dataRaw/jma_volcano/volcano_list.xls")
read.xls("~/Dropbox/02data/dataRaw/jma_volcano/volcano_list.xls")
df  <- read.xls("~/Dropbox/02data/dataRaw/jma_volcano/volcano_list.xls")
View(df)
rmarkdown::render("tutorial.Rmd")
getwd()
setwd  ("~/Ubuntu2/git/knitcitations/vignettes/")
rmarkdown::render("tutorial.Rmd")
install.packages("ctv")
devtools::install_github("cboettig/knitcitations@v1")
rmarkdown::render("tutorial.Rmd")
install.packages("knitcitaions")
rmarkdown::render("tutorial.Rmd")
setwd  ("~/Ubuntu2/git/knitcitations/vignettes/")
rmarkdown::render("tutorial.Rmd")
citep("10.1890/11-0011.1")
rmarkdown::render("tutorial.Rmd")
library("knitcitations")
cleanbib()
options("citation_format" = "pandoc")
install.packages(c("changepoint", "deSolve", "mgcv", "RMark"))
rmarkdown::render("tutorial.Rmd")
setwd  ("~/Ubuntu2/git/knitcitations/vignettes/")
rmarkdown::render("tutorial.Rmd")
setwd  ("~/Ubuntu2/git/knitcitations/vignettes/")
rmarkdown::render("tutorial.Rmd")
x = 1:10
y = 1:10
plot(x,y)
library(ggplot2)
world2 <- fortify(world, region = "ISO2")
world2 <- fortify(world)
map_data(world)
map_data("world")
map(map_data("world"))
map()
library(ggmap)
map <- get_map(location = 'Europe', zoom = 4)
ggmap(map)
map <- get_map(location = 'Pacific', zoom = 4)
ggmap(map)
ggmap(get_map())
ggmap(get_map(zoom = 1))
ggmap(location = c(lon = -180, lat = 0)get_map(zoom = 1))
ggmap(location = c(lon = 180, lat = 0)get_map(zoom = 1))
ggmap(get_map(location = c(lon = 180, lat = 0),zoom = 1))
ggmap(get_map(location = c(lon = 180, lat = 0),zoom = 6))
ggmap(get_map(location = c(lon = 180, lat = 0),zoom = 4))
ggmap(get_map(location = c(lon = 180, lat = 0),zoom = 3))
ggmap(get_map(location = c(lon = 180, lat = 0),zoom = 2))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2))
ggmap(get_map(location = c(lon = -170, lat = 30),zoom = 2))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 3))
ggmap(get_googlemap(location = c(lon = -170, lat = 20),zoom = 1))
ggmap(get_googlemap(location = c(lon = -170, lat = 20),zoom = 2))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2, maptype = "terrain"))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2, maptype = "satellite"))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2, maptype = "satellite", source = "osm"))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2, maptype = "satellite", source = "stamen"))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2, maptype = "terrain", source = "stamen"))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2, maptype = "terrain", source = "cloudmade"))
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2, maptype = "terrain", source = "osm"))
proxy()
ggmap(get_map(location = c(lon = -170, lat = 20),zoom = 2, maptype = "terrain", source = "osm"))
phd.url.table("~/Dropbox/2data//data/Onsen//riyo_h24_1.pdf")
read.csv("~/Dropbox/2data//data/Onsen//riyo_h24_1.pdf")
onsen24  <- read.csv("~/Dropbox/2data//data/Onsen//Onsen24.txt", sep = " ")
View(onsen24)
onsen24  <- read.csv("~/Dropbox/2data//data/Onsen//Onsen24.txt", sep = " ")
View(onsen24)
onsen24  <- read.csv("~/Dropbox/2data//data/Onsen//Onsen24.txt", sep = " ")
View(onsen24)
onsen24  <- read.csv("~/Dropbox/2data//data/Onsen//Onsen24.txt", sep = " ")
View(onsen24)
jpName  <- readRds("~/Dropbox/2data/dataProduct/jpKenName_140616_161141.Rds")
jpName  <- readRDS("~/Dropbox/2data/dataProduct/jpKenName_140616_161141.Rds")
View(jpName)
update.packages(checkBuilt=TRUE,ask = FALSE, dependencies = c('Suggests'))
proxy()
upPkgs()
library(rgdal)
install.packages("SpatialTools")
install.packages("rgdal")
rgdal
library("rgdal", lib.loc="~/Dropbox/config/R/rLib/Linux64/3.1")
install.packages("SpatialTools")
library(ggplot2)
library(ggmap)
library(maptools)
library(maps)
library(raster)
library(rgdal)
install.packages("rgdal")
library(rgdal)
jpv_spdf <- readRDS("~/Dropbox/2data/data/shp/jpVol110_spdf_140626_104751.Rds")
install.packages("investr")
install.packages("boot")
install.packages("nlme")
install.packages("lme4")
install.packages("rjags")
\bibliographystyle{abbrvnat}
source('~/Dropbox/0paper/paper1401/DATA/subset.R', echo=TRUE)
hkdxyd  <- unique(hkdBH[,c(1:3,13)])
View(hkdxyd)
library("classint")
library("classInt")
TD  <- hkdxyd$TD
cls  <- classIntervals(TD, 5, style = "fixed", fixedBreaks = c(min(TD), 500, 1000, 1500, 2000, max(TD)))
cls
cls2  <- classIntervals(TD, 10)
cls2
cls2  <- classIntervals(TD, 2)
cls
cls2
cls2  <- classIntervals(TD, 10)
cls2
cls2  <- classIntervals(TD, 10, style = "fixed")
cls2
cls2  <- classIntervals(TD, 10, style = "sd")
cls2
cls2  <- classIntervals(TD, 10, style = "equal")
cls2
cls2  <- classIntervals(TD, 20, style = "equal")
cls2
cls2  <- classIntervals(TD, 5, style = "equal")
cls2
cls2  <- classIntervals(TD, 5, style = "pretty")
cls2
cls2  <- classIntervals(TD, 10, style = "pretty")
cls2
summary(hkdBH)
cls  <- classIntervals(TD, 5, style = "fixed", fixedBreaks = c(min(TD), 500, 1000, 1500, 2000, max(TD)))
cls
cls2  <- classIntervals(TD, 5, style = "pretty")
cls2
hkd11k  <- subset(hkdBH, (Depths >=100)
hkd11k  <- subset(hkdBH, (Depths >=100))
phd.url.table()
phd.url.table
url2  <- "https://gbank.gsj.jp/volcano/Act_Vol/activev.html"
d2  <- phd.url.table(url2)
url2  <- "https://gbank.gsj.jp/volcano/Act_Vol/activev.html"
d2  <- phd.url.table(url2)
d2  <- phd.url.table(url2, 2)
d2  <- phd.url.table(url2, 3)
d2  <- phd.url.table(url2, 4)
url.doc <- htmlParse(url2)
url2  <- "https://gbank.gsj.jp/volcano/Act_Vol/activev.html"
url.doc <- htmlParse(url2)
proxy()
url2  <- "https://gbank.gsj.jp/volcano/Act_Vol/activev.html"
url.doc <- htmlParse(url2)
url2  <- "~/wget/gbank.gsj.jp/volcano/Act_Vol/activev.html"
url.doc <- htmlParse(url2)
phd.url.table(url2)
phd.url.table(url2,2)
d  <- phd.url.table(url2,2)
d[!is.na(d)]
View(d)
d[!is.na(d),]
d[complete.cases(d),]
e  <- d[complete.cases(d),]
View(e)
v2  <- d[complete.cases(d),]
v1  <-  readRDS("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.Rds")
v1  <-  read.csv("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
View(`v1`)
v1  <-  read.csv2("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
View(`v2`)
View(`v1`)
View(`v2`)
v3  <- merge(v1, v2, by.x = "jname", by.y = v2[,2])
View(`v2`)
v3  <- merge(v1, v2, by.x = "jname", by.y = v2[,1])
names(v2)
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
v3  <- merge(v1, v2, by = "jname")
View(`v3`)
View(`v1`)
View(`v2`)
v1$jname == v1$jname
v3  <- merge(v1, v2)
v3  <- merge(v1, v2, by = "jname")
View(`v3`)
v3  <- merge(v1, v2, by = "jname", all = T)
View(`v3`)
View(`v2`)
View(`v1`)
View(`v2`)
View(`v1`)
v1  <-  read.csv2("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
v1$ID  <- 1:110
View(`v1`)
url2  <- "~/wget/gbank.gsj.jp/volcano/Act_Vol/activev.html"
d  <- phd.url.table(url2,2)
v2  <- d[complete.cases(d),]
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
View(`v2`)
v2$ID  <- c(11:100,1:10)
id2  <- c(11:100,1:10)
View(`v2`)
id2  <- c(100:110,1:99)
v2$ID  <- id2
View(`v2`)
v3  <- merge(v1, v2, by = "ID")
View(`v3`)
jname  <- cbind(v3$jname.x, v3$jname.y)
View(jname)
v2  <- d[complete.cases(d),]
View(`v2`)
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
v22  <- edit(v2)
View(`v3`)
v22  <- edit(v2)
v3  <- merge(v1, v2, by = "jname", all = T)
View(`v3`)
v22  <- edit(v2)
gsub("高原","高原山",v2$jname)
v2 <- gsub("高原","高原山",v2$jname)
v2$jname <- gsub("高原","高原山",v2$jname)
jname <- gsub("高原","高原山",v2$jname)
v2$jname
v2  <- d[complete.cases(d),]
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
v2$jname
v3[is.na(v3),]
v3[!is.na(v3),]
v3[which(!is.na(v3)),]
v3[which(is.na(v3)),]
v3[complete.cases(v3),]
v3[!complete.cases(v3),]
nas   <- v3[!complete.cases(v3),]
View(nas)
View(`v2`)
jname <- gsub("高原","高原山",v2$jname)
jname <- gsub("鳴子","鳴子火山群",v2$jname)
jname <- gsub("鶴見岳","鶴見岳・伽藍岳",v2$jname)
jname <- gsub("指臼山","指臼岳",v2$jname)
jname <- gsub("鳥島","伊豆鳥島",v2$jname)
v2$jname  <- jname
v3  <- merge(v1, v2, by = "jname", all = T)
v3  <- merge(v1, v2, by = "jname")
View(`v3`)
v1  <-  read.csv2("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
v1$ID  <- 1:110
url2  <- "~/wget/gbank.gsj.jp/volcano/Act_Vol/activev.html"
d  <- phd.url.table(url2,2)
v2  <- d[complete.cases(d),]
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
v3  <- merge(v1, v2, by = "jname", all =T)
nas   <- v3[!complete.cases(v3),]
jname <- gsub("高原","高原山",v2$jname)
jname
jname <- gsub("鳴子火山群","鳴子",v2$jname)
jname <- gsub("鶴見岳","鶴見岳・伽藍岳",v2$jname)
jname <- gsub("指臼山","指臼岳",v2$jname)
jname <- gsub("鳥島","伊豆鳥島",v2$jname)
v2$jname  <- jname
v4  <- merge(v1, v2, by = "jname")
View(`v4`)
View(`v2`)
v1  <-  read.csv2("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
v1$ID  <- 1:110
url2  <- "~/wget/gbank.gsj.jp/volcano/Act_Vol/activev.html"
d  <- phd.url.table(url2,2)
v2  <- d[complete.cases(d),]
names(v2)  <- c("jname1", "Name", "r1998", "jma03", "jma09", "Prefecture")
v3  <- merge(v1, v2, by = "jname", all =T)
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
#id2  <- c(100:110,1:99)
#v2$ID  <- id2
v3  <- merge(v1, v2, by = "jname", all =T)
nas   <- v3[!complete.cases(v3),]
jname <- gsub("高原","高原山",v2$jname)
jname <- gsub("鳴子火山群","鳴子",v2$jname)
jname <- gsub("鶴見岳","鶴見岳・伽藍岳",v2$jname)
jname <- gsub("指臼山","指臼岳",v2$jname)
jname <- gsub("鳥島","伊豆鳥島",v2$jname)
v2$jpname  <- jname
View(`v2`)
jname <- gsub("高原","高原山",v2$jname)
jname <- gsub("鳴子火山群","鳴子",v2$jname)
jname <- gsub("鶴見岳","鶴見岳・伽藍岳",v2$jname)
jname <- gsub("指臼山","指臼岳",v2$jname)
jname <- gsub("鳥島","伊豆鳥島",v2$jname)
v2$jpname  <- jname
View(`v2`)
jname
v1  <-  read.csv2("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
v1$ID  <- 1:110
url2  <- "~/wget/gbank.gsj.jp/volcano/Act_Vol/activev.html"
d  <- phd.url.table(url2,2)
v2  <- d[complete.cases(d),]
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
#id2  <- c(100:110,1:99)
#v2$ID  <- id2
v3  <- merge(v1, v2, by = "jname", all =T)
nas   <- v3[!complete.cases(v3),]
jname <- gsub("高原","高原山",v2$jname)
jname
jname <- gsub("鳴子火山群","鳴子",v2$jname)
jname <- gsub("鶴見岳","鶴見岳・伽藍岳",v2$jname)
jname <- gsub("指臼山","指臼岳",v2$jname)
jname <- gsub("鳥島","伊豆鳥島",v2$jname)
jname
v1  <-  read.csv2("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
v1$ID  <- 1:110
url2  <- "~/wget/gbank.gsj.jp/volcano/Act_Vol/activev.html"
d  <- phd.url.table(url2,2)
v2  <- d[complete.cases(d),]
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
#id2  <- c(100:110,1:99)
#v2$ID  <- id2
v3  <- merge(v1, v2, by = "jname", all =T)
nas   <- v3[!complete.cases(v3),]
oname  <- v2$jname
nname <- gsub("高原","高原山",oname)
nname <- gsub("鳴子火山群","鳴子",oname)
nname <- gsub("鶴見岳","鶴見岳・伽藍岳",oname)
nname <- gsub("指臼山","指臼岳",oname)
nname <- gsub("鳥島","伊豆鳥島",oname)
v2$jpname  <- nname
View(`v2`)
nname <- gsub("高原","高原山",oname)
nname
nname <- gsub("鳴子火山群","鳴子",oname)
nname
oname <- gsub("高原","高原山",oname)
nname  <- v2$jname
nname <- gsub("高原","高原山",nname)
nname <- gsub("鳴子火山群","鳴子",nname)
nname <- gsub("鶴見岳","鶴見岳・伽藍岳",nname)
nname <- gsub("指臼山","指臼岳",nname)
nname <- gsub("鳥島","伊豆鳥島",nname)
v2$jpname  <- nname
View(`v2`)
v2$jname  <- nname
v1  <-  read.csv2("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
v1$ID  <- 1:110
url2  <- "~/wget/gbank.gsj.jp/volcano/Act_Vol/activev.html"
d  <- phd.url.table(url2,2)
v2  <- d[complete.cases(d),]
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
#id2  <- c(100:110,1:99)
#v2$ID  <- id2
v3  <- merge(v1, v2, by = "jname", all =T)
nas   <- v3[!complete.cases(v3),]
nname  <- v2$jname
nname <- gsub("高原","高原山",nname)
nname <- gsub("鳴子火山群","鳴子",nname)
nname <- gsub("鶴見岳","鶴見岳・伽藍岳",nname)
nname <- gsub("指臼山","指臼岳",nname)
nname <- gsub("鳥島","伊豆鳥島",nname)
v2$jname  <- nname
v4  <- merge(v1, v2, by.x = "jname")
v4  <- merge(v1, v2, by.x = "jname", all =T)
View(`v4`)
View(nas)
v1  <-  read.csv2("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
v1$ID  <- 1:110
url2  <- "~/wget/gbank.gsj.jp/volcano/Act_Vol/activev.html"
d  <- phd.url.table(url2,2)
v2  <- d[complete.cases(d),]
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
#id2  <- c(100:110,1:99)
#v2$ID  <- id2
v3  <- merge(v1, v2, by = "jname", all =T)
nas   <- v3[!complete.cases(v3),]
nname  <- v2$jname
nname <- gsub("高原","高原山",nname, fixed = T)
nname <- gsub("鳴子火山群","鳴子",nname, fixed = T)
nname <- gsub("鶴見岳","鶴見岳・伽藍岳",nname, fixed = T)
nname <- gsub("指臼山","指臼岳",nname, fixed = T)
nname <- gsub("鳥島","伊豆鳥島",nname, fixed = T)
v2$jname  <- nname
v4  <- merge(v1, v2, by.x = "jname", all =T)
v1  <-  read.csv2("~/Dropbox/2data/data/jpVol110_spdf_140704_150719.csv")
v1$ID  <- 1:110
url2  <- "~/wget/gbank.gsj.jp/volcano/Act_Vol/activev.html"
d  <- phd.url.table(url2,2)
v2  <- d[complete.cases(d),]
names(v2)  <- c("jname", "Name", "r1998", "jma03", "jma09", "Prefecture")
#id2  <- c(100:110,1:99)
#v2$ID  <- id2
v3  <- merge(v1, v2, by = "jname", all =T)
nas   <- v3[!complete.cases(v3),]
nname  <- v2$jname
nname <- gsub("高原","高原山",nname, fixed = T)
nname <- gsub("鳴子火山群","鳴子",nname, fixed = T)
nname <- gsub("鶴見岳","鶴見岳・伽藍岳",nname, fixed = T)
nname <- gsub("指臼山","指臼岳",nname, fixed = T)
nname <- gsub("鳥島","伊豆鳥島",nname, fixed = T)
v2$jname  <- nname
v4  <- merge(v1, v2, by.x = "jname", all =T)
View(`v4`)
source('~/.active-rstudio-document', echo=TRUE)
View(nas)
v2[v2$jname == "鳥島",]
v2["鳥島" %in v2$janme,]
v2[grep("鳥島",v2$jname),]
source('~/.active-rstudio-document', echo=TRUE)
View(`v4`)
names(v4)
v5  <- v4[,c("ID", "Name", "jname", "yomi", "Prefecture", "lon", "lat", "elev", "londms", "latdms", "r1998", "jma03", "jma09")]
v5  <- v4[,c("ID", "Name", "jname", "yomi", "Prefecture", "lon", "lat", "elve", "londms", "latdms", "r1998", "jma03", "jma09")]
View(`v5`)
v6  <- v5[order(v4$ID),]
View(`v6`)
v5  <- v4[,c("ID", "Name", "jname", "yomi", "Prefecture", "londms", "latdms","lon", "lat", "elve",   "r1998", "jma03", "jma09")]
v6  <- v5[order(v4$ID),]
names(v6)  <- c("ID", "Name", "Jname", "Yomi", "Prefecture","Longitude", "Latitude", "Elevation", "Lon", "Lat", "V1998", "JMA03", "JMA09")
View(`v6`)
v7  <- v6[,c("ID", "Name", "Longitude", "Latitude", "Elevation", "V1998", "JMA03", "JMA09")]
View(`v7`)
source('~/.active-rstudio-document', echo=TRUE)
View(`v7`)
v7  <- v6[,c("ID", "Name", "Longitude", "Latitude", "Elevation", "JMA03", "JMA09")]
View(`v7`)
v7  <- v6[,c("ID", "Name", "Janme", "Longitude", "Latitude", "Elevation", "JMA03", "JMA09")]
v7  <- v6[,c("ID", "Name", "Jname", "Longitude", "Latitude", "Elevation", "JMA03", "JMA09")]
View(`v7`)
source('~/Dropbox/0paper/paper1401/DATA/jpVol100.R', echo=TRUE)
View(`v7`)
library(xtable)
print(xtable(v7))
library("knitr")
print(xtable(v7))
print(xtable(v7),sanitize.text.function=identity)
methods(xtable)
install.packages("Design")
install.packages("reporttools")
library(reportools)
library(reporttools)
print(xtable(v7, sanitize.text.function = function(x) x, booktabs=TRUE, caption = "test",type="latex", latex.environments=c("center", "footnotesize")), include.rownames=FALSE, tabular.environment='longtable',floating=FALSE)
print(xtable(v7),sanitize.text.function=identity)
print(xtable(v7),sanitize.text.function=raw)
print(xtable(v7),sanitize.text.function=x)
print(xtable(v7),sanitize.text.function=NULL)
jpVol110 <- v6
setwd(dataDir)
phd.write.csv(jpVol110)
get_googlemap
ggmap::get_googlemap
match.arg(c("gauss", "rect", "ep"),
c("gaussian", "epanechnikov", "rectangular", "triangular"),
several.ok = TRUE)
project = deparse(substitute(sub))
deparse(substitute(sub))
(substitute(sub))
substitute(sub)
sub = "A"
substitute(sub)
deparse(substitute(sub))
sub = "A"
deparse(substitute(sub))
deparse(sub)
deparse(substitute(sub))
sub = "A"
deparse(substitute(sub))
sub <- "A"
deparse(substitute(sub))
sub <- c("A")
deparse(substitute(sub))
sub <- A
deparse(substitute(sub))
sub <- A
deparse(substitute(sub))
A  <- as.character(A)
A  <- as.character("A")
sub <- A
deparse(substitute(sub))
(substitute(deparse(sub))
substitute(deparse(sub))
plot(b)
source('~/.active-rstudio-document')
phd.bbox
bbox_SPDF <- phd.bbox(Xmin, Xmax, Ymin, Ymax, Crs)
Xmin <- 139
Xmax <- 146.5
Ymin <- 41.5
Ymax <- 45.8
Crs <- wgs84GRS
Prs <- lccWgs84
bbox_SPDF <- phd.bbox(Xmin, Xmax, Ymin, Ymax, Crs)
plot(bbox_SPDF)
class(bbox_SPDF)
splot(bbox_SPDF)
sp::bbox_SPDF <- phd.bbox(Xmin, Xmax, Ymin, Ymax, Crs)
sp::splot(bbox_SPDF)
spplot(bbox_SPDF)
sp::spplot(bbox_SPDF)
plot(bbox_SPDF)
bbox_SPDF <- phd.bbox(Xmin, Xmax, Ymin, Ymax, Crs)
plot(bbox_SPDF)
bbox_SPDF <- phd.bbox(Xmin, Xmax, Ymin, Ymax)
plot(bbox_SPDF)
bbox_SPDF <- phd.bbox(Xmin, Xmax, Ymin, Ymax)
plot(bbox_SPDF)
bbox_SPDF <- phd.bbox(xmin = Xmin, xmax = Xmax, ymin = Ymin, ymax = Ymax)
plot(bbox_SPDF)
bbox_SPDF <- phd.bbox(xmin = Xmin, xmax = Xmax, ymin = Ymin, ymax = Ymax, crs = Crs)
plot(bbox_SPDF)
phd.bbox
xmin <- 139
xmax <- 146.5
ymin <- 41.5
ymax <- 45.8
bbox_SPDF <- phd.bbox(xmin = Xmin, xmax = Xmax, ymin = Ymin, ymax = Ymax, crs = Crs)
plot(bbox_SPDF)
bbox_SPDF <- phd.bbox(xmin,xmax,ymin,ymax,crs)
source('~/Win7/Air/Dropbox/5opts/knit/purlRnw.R')
volA  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol110_140812_174525.Rds")
volQ  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol455_140812_172148.Rds")
sp::proj4string(bbox_SPDF) == sp::proj4string(volQ)
sp::proj4string(volQ) <- sp::proj4string(bbox_SPDF)
rgeos::gBuffer(hvolA)
phd.bigpolys()
phd.bigpolys
phd.bigpolys(gadm)
gadm  <- jp1[jp1@data$ID_1 == 12,]
jp1  <- raster::getData('GADM', country='JPN', level=1, path = "~/Dropbox/2data//dataRaw/gadm2")
gadm  <- jp1[jp1@data$ID_1 == 12,]
phd.bigpolys(gadm)
phd.bigpolys
phd.bigpolys(gadm, 1000000)
phd.bigpolys(gadm, 10)
??buffer
buffer(hvolA)
adehabitat::buffer(hvolA)
adehabitat::buffer(hvolA@data)
summary(hvolA)
xmin <- 139
xmax <- 146
ymin <- 41.4
ymax <- 45.8
crs  <- wgs84GRS
prs  <- lccWgs84
bbox_SPDF <- phd.bbox(xmin,xmax,ymin,ymax,crs)
#plot(bh$Lon, bh$Lat, pch = 20)
jp1  <- raster::getData('GADM', country='JPN', level=1, path = "~/Dropbox/2data//dataRaw/gadm2")
gadm  <- jp1[jp1@data$ID_1 == 12,]
# sp::plot(gadm)
bh  <- readRDS("~/Dropbox/2data/dataProduct/hkd/hkd_profiles_140806_164333.Rds")
volA  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol110_140812_174525.Rds")
volQ  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol455_140812_172148.Rds")
# hvol  <- volQ[gadm,]
# sp::proj4string(volQ)
sp::proj4string(bbox_SPDF) == sp::proj4string(volQ)
sp::proj4string(volQ) <- sp::proj4string(bbox_SPDF)
hvolQ <- volQ[bbox_SPDF,]
hvolA <- volA[bbox_SPDF,]
plot(bh$Lon, bh$Lat, pch = 20, xlab = "Longitude", ylab = "Latitude", xlim = c(xmin,xmax), ylim = c(ymin,ymax))
sp::plot(hvolA, pch = 17, col = "red", add = TRUE)
sp::plot(hvolQ, col = "blue", add = TRUE)
sp::plot(gadm, add = TRUE)
phd.bigpolys(gadm, 10)
adehabitat::buffer(hvolA@)
summary(hvolA)
str(hvolA)
hvolA@coords
adehabitat::buffer(hvolA@coords)
??buffer
help.search(buffer)
help.search("buffer")
adehabitatMA::buffer(hvolA@coords)
source('~/Dropbox/5opts/purlphdFunctions.R')
1/120
1/120*111
grid  <-  sp::spsample(bbox_SPDF,type = "regular", cellsize = c(0.008333333,0.008333333), offset =c(0.5, 0.5))
sp::plot(grid)
summary(grid)
grid_p  <-  sp::spsample(bbox_SPDF,type = "regular", cellsize = c(0.008333333,0.008333333), offset =c(0.5, 0.5))
grid_r  <- raster::raster(grid_p)
plot(grid_r)
grid_r[]  <- 1
sp::plot(grid)
sp::plot(grid_r)
grid_r[]  <- NA
sp::plot(grid_r)
grid_ok  <- gIntersection(grid_r, gadm)
grid_ok  <- rgeos::gIntersection(grid_r, gadm)
sp::proj4string(grid_r) <- CRS(wgs84GRS)
grid_ok  <- rgeos::gIntersection(grid_r, gadm)
sp::proj4string(grid_r) <- sp::CRS(wgs84GRS)
grid_ok  <- rgeos::gIntersection(grid_r, gadm)
str(grid_r)
grid_i  <- rgeos::gIntersection(grid_p, gadm)
str(gadm)
plot(gdam)
plot(gadm)
big  <- gadm[gadm@polygons[1],]
big  <- gadm[gadm@polygons[[1]],]
phd.bigpolys(gadm, 1000000)
phd.bigpolys(gadm, 100000000)
phd.bigpolys
polys <- lapply(gadm@polygons , slot , "Polygons" )
summary (polys)
str(polys)
areas  <- lapply(polys@Polygon, slot, "area")
areas  <- lapply(polys@Polygons, slot, "area")
areas  <- lapply(polys, slot, "area")
polys[1]
polys[[1]]
phd.bigpolys
area_fun  <- function(y) {
sapply(y@Polygons, function(z) z@area)
}
areas_l <- lapply(gadm@polygons, area_fun)
polys_l <- lapply(gadm@polygons , slot , "Polygons" )
str(areas_l)
gadm[area > 10000,]
sel  <- gadm[area > 10000,]
sel  <- gadm[gadm@area > 10000,]
SP  <- as(gadm, "SpatialPolygon")
SP  <- as(gadm, "Polygon")
SP  <- as(gadm, "Polygons")
SP  <- as(gadm, "SpatialPolygons")
str(sp)
str(SP)
set  <- gadm[gadm$area > 3000,]
set  <- gadm[gadm$AREA > 3000,]
phd.bigpolys
?? biggest
?? big
?? largest
spatstat::incircle
str(gadm)
SPDF  <- gadm
areas_l <- lapply(SPDF@polygons, area_fun)
areas_l <- sapply(SPDF@polygons, area_fun)
areas_v <- sapply(SPDF@polygons, area_fun)
View(areas_v)
max(areas_v)
biggest <- sapply(areas_l, function(a) which(a > area))
max(areas_v)
which.max(areas_v)
which.max(areas_l)
which.max(areas_v)
which(area_v > 0.0001)
areas_v <- sapply(SPDF@polygons, area_fun)
which(area_v > 0.0001)
which(areas_v > 0.0001)
id <- which.max(areas_v)
P  <- SPDF@polygons[[1]]@Polygons[[id]]
plot(P)
sp::plot(P)
SPDF2  <- as(P, "SptailPolygonsDataFrame")
phd.sp2SPDF
phd.bbox
Polygon  <- SPDF@polygons[[1]]@Polygons[[id]]
Polygons  <- sp::Polygons(list(Polygon), 1) #ID for row.names = 1
SP  <- sp::SpatialPolygons(list(Polygons))
plot(SP)
str(SP)
crs  <- sp::proj4string(SPDF)
polygons_l  <- jp1@polygons
polygons_l  <- unlist(SPDF@polygons)
polygons_l  <- SPDF@polygonsp[[1]]
polygons_l  <- SPDF@polygonsp[[1]]@area
polygons_l  <- SPDF@polygons[[1]]@area
polygons_l  <- SPDF@polygons[[2]]@area
polygons_l  <- jp1@polygons[[2]]@area
polygons_l  <- jp1@polygons[[3]]@area
SPDF  <- jp1
crs  <- sp::proj4string(SPDF)
area_fun  <- function(polygons) {
sapply(polygons@Polygons, function(Polygon) Polygon@area)
}
areas_v <- sapply(SPDF@polygons, area_fun)
SPDF  <- jp1
area_polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(area_polygons)
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(area_Polygons)
id_polygons  <- which.max(areas_Polygons)
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(areas_Polygons)
SP  <- SPDF@polygons[[id_polygons]]
class(SP)
D  <- SPDF@polygons[[id_polygons]]@data
str(SPDF)
P  <- SPDF@polygons[[id_polygons]]
areas_Polygons
phd.bigpolys
max(areas_Polygons)
phd.largestPolys  <- function(SPDF)) {
### Extract Largest Polygons(Layer) from SPDF to SPDF1
crs  <- sp::proj4string(SPDF)
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(areas_Polygons)
Polygon  <- SPDF@polygons[[id_polygons]]
Polygons  <- sp::Polygons(list(Polygon), 1) #ID for row.names = 1
SP  <- sp::SpatialPolygons(list(Polygons))
phd.largestPolys  <- function(SPDF)) {
phd.largestPolys  <- function(SPDF) {
### Extract Largest Polygons(Layer) from SPDF to SPDF1
crs  <- sp::proj4string(SPDF)
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(areas_Polygons)
Polygon  <- SPDF@polygons[[id_polygons]]
Polygons  <- sp::Polygons(list(Polygon), 1) #ID for row.names = 1
SP  <- sp::SpatialPolygons(list(Polygons))
data_d  <- data.frame(name = "Polygon", row.names= row.names(Polygons))
SPDF1  <- as(P, "SptailPolygonsDataFrame")
sp::proj4string(SPDF1)  <- crs
return(SPDF1)
}
spd  <- phd.largestPolys(jp1)
crs  <- sp::proj4string(SPDF)
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(areas_Polygons)
Polygon  <- SPDF@polygons[[id_polygons]]
Polygons  <- sp::Polygons(list(Polygon), 1) #ID for row.names = 1
SP  <- sp::SpatialPolygons(list(Polygons))
data_d  <- data.frame(name = "Polygon", row.names= row.names(Polygons))
SPDF1  <- as(P, "SptailPolygonsDataFrame")
sp::proj4string(SPDF1)  <- crs
phd.largestPolys  <- function(SPDF) {
### Extract Largest Polygons(Layer) from SPDF to SPDF1
crs  <- sp::proj4string(SPDF)
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(areas_Polygons)
Polygon  <- SPDF@polygons[[id_polygons]]
Polygons  <- sp::Polygons(list(Polygon), 1) #ID for row.names = 1
SP  <- sp::SpatialPolygons(list(Polygons))
data_d  <- data.frame(name = "Polygon", row.names= row.names(Polygons))
SPDF1  <- as(SP, "SptailPolygonsDataFrame")
sp::proj4string(SPDF1)  <- crs
return(SPDF1)
}
spd  <- phd.largestPolys(jp1)
phd.bbox
phd.largestPolys  <- function(SPDF) {
### Extract Largest Polygons(Layer) from SPDF to SPDF1
crs  <- sp::proj4string(SPDF)
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(areas_Polygons)
Polygon  <- SPDF@polygons[[id_polygons]]
Polygons  <- sp::Polygons(list(Polygon), 1) #ID for row.names = 1
SP  <- sp::SpatialPolygons(list(Polygons))
data_d  <- data.frame(name = "Polygon", row.names= row.names(Polygons))
SPDF1  <- sp::SpatialPolygonsDataFrame(SP, data = data_d)
sp::proj4string(SPDF1)  <- crs
return(SPDF1)
}
spd  <- phd.largestPolys(jp1)
SPDF  <- jp1
crs  <- sp::proj4string(SPDF)
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(areas_Polygons)
Polygon  <- SPDF@polygons[[id_polygons]]
Polygons  <- sp::Polygons(list(Polygon), 1) #ID for row.names = 1
str(Polygon)
Polygons  <- sp::Polygons(list(Polygon), 1:lenth(Polygon)) #ID for row.names = 1
mode(Polygon)
class(Polygon)
Polygons  <- SPDF@polygons[[id_polygons]]
SP  <- sp::SpatialPolygons(list(Polygons))
data_d  <- data.frame(name = "Polygon", row.names= row.names(Polygons))
SPDF1  <- sp::SpatialPolygonsDataFrame(SP, data = data_d)
SP  <- sp::SpatialPolygons(list(Polygons))
plot(SP)
str(SP)
SPDF1  <- as(SP, "SpatialPolygonsDataFrame")
SP  <- as(Polygons, "SpatialPolygons")
SPDF1  <- as(SP, "SpatialPolygonsDataFrame")
plot(SPDF1)
sp::proj4string(SPDF1)  <- crs
return(SPDF1)
phd.largestPolys  <- function(SPDF) {
### Extract Largest Polygons(Layer) from SPDF to SPDF1
crs  <- sp::proj4string(SPDF)
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
id_polygons  <- which.max(areas_Polygons)
Polygons  <- SPDF@polygons[[id_polygons]]
SP  <- sp::SpatialPolygons(list(Polygons))
SPDF1  <- as(SP, "SpatialPolygonsDataFrame")
sp::proj4string(SPDF1)  <- crs
return(SPDF1)
}
phd.largestPolys(jp1)
plot(phd.largestPolys(jp1))
area = 1
areas_Polygons  <-  sapply(SPDF@polygons, function(Polygons) Polygons@area)
ids_polygons  <- which(areas_Polygons >= area)
Polygons  <- SPDF@polygons[[ids_polygons]]
Polygons  <- lapply(ids_polygons, function(SPDF) SPDF@polygons)
Polygons  <- lapply(SPDF, function(SPDF) SPDF@polygons)
Polygons  <- list()
for (i in ids_polygons) {
Polygons[[i]]  <- SPDF@polygons[[i]]
}
str(Polygons)
SP  <- sp::SpatialPolygons(list(Polygons))
class(Polygons)
SP  <- sp::SpatialPolygons(list(Polygons))
Polygons  <- Polygons()
Polygons  <- sp::Polygons()
Polygons  <- list()
for (i in ids_polygons) {
Polygons[[i]]  <- SPDF@polygons[[i]]
}
class(Polygons)
str(Polygons)
SP  <- as(Polygons, "SpatialPolygons")
SP  <- sp::SpatialPolygons(list(Polygons))
SP  <- sp::SpatialPolygons(Polygons)
SP  <- as(Polygons, "SpatialPolygons")
phd.bbox
str(Polygons)
summary(Polygons)
SP  <- sp::SpatialPolygons(list(!is.null(Polygons))
SP  <- sp::SpatialPolygons(list(!is.null(Polygons)))
is.null(Polygons)
SPDF@polygons[[3]]
summary(Polygons)
class(Polygons)
mode(Polygons)
str(Polygons)
is.null(Polygons)
is.null(lapply(Polygons, slot))
is.null(lapply(Polygons, slot, "polygons"))
is.null(lapply(Polygons, slot, "Polygons"))
is.null(lapply(Polygons, slot, "Polygon"))
is.null(lapply(Polygons, slot "Polygon"))
lapply(Polygons, slot "Polygon")
lapply(Polygons, slot "Polygons")
lapply(Polygons, slot "polygons")
lapply(Polygons, slot "ID")
lapply(Polygons, slot "polygons")
lapply(Polygons, slot "Polygons")
Polygons_l  <- list()
Polygons_l[[i]]  <- SPDF@polygons[[i]]
summary(Polygons_l)
Polygons_l  <- list()
for (i in ids_polygons) {
Polygons_l[[i]]  <- SPDF@polygons[[i]]
}
summary(Polygons_l)
Polygons_l[length(Polygons > 0)]
Polygons_l [[1]]
Polygons_l [[2]]
length(Polygons_l)
for (i in 1:length(Polygons_l)) {
Polygons[[i]]  <- !is.null(Polygons_l)
}
summary(Polygons)
SP  <- sp::SpatialPolygons(list(Polygons_l))
Polygons_l[[i]]  <- lapply(SPDF@polygons[[i]], slot "Polygons")
Polygons_l[[i]]  <- lapply(SPDF@polygons[[i]], slot, "Polygons")
Polygons_l[[i]]  <- lapply(SPDF@polygons[[i]], slot, "Polygon")
Polygons_l[[i]]  <- lapply(SPDF@polygons[[i]], slot, "Polygons")
Polygons_l[[i]]  <- lapply(SPDF@polygons[[i]], slot "Polygon")
Polygons_l[[i]]  <- lapply(SPDF@polygons[[i]], slot "Polygons")
Polygons_l[[i]]  <- lapply(SPDF@polygons[[i]], slot "area")
Polygons_l[[i]]  <- lapply(SPDF@polygons[[i]], slot, "area")
slot(SPDF, "polygons")
SPDF@polygons[[29]]
for (i in ids_polygons) {
Polygons_l[[i]]  <- lapply(SPDF@polygons[[i]], slot, "area")
}
Polygons_l[[i]]  <- SPDF@polygons[[i]]
Polygons_l  <- list()
for (i in ids_polygons) {
Polygons_l[[i]]  <- SPDF@polygons[[i]]
}
Polygons_l
Polygons  <- Polygons(Polygons_l)
slot(Polygons_l, "ID")
slot(Polygons_l, "area")
str(Polygons_l)
slot(Polygons_l@Polygons, "area")
slot(Polygons_l@polygons, "area")
slot(Polygons_l@polygon, "area")
??SpatialPolygons
SP  <- maptools::unionSpatialPolygons(Polygons_l)
?? list to Polygons
??list to Polygons
?? "list to SpatialPolygons"
SP  <- maptools::unionSpatialPolygons(Polygons_l, ids_polygons)
SpatialEpi::polygon2spatial_polygon(Polygons_l)
SpatialEpi::polygon2spatial_polygon
SP  <- SpatialEpi::polygon2spatial_polygon(Polygons_l, wgs84GRS)
SP  <- SpatialEpi::polygon2spatial_polygon(Polygons_l, '+proj=longlat')
Polygons_l[[i]]  <- SPDF@polygons[[i]]
Polygons_l  <- SPDF@polygons[[ids_polygons]]
Polygons_l  <- SPDF@polygons[[1]]
Polygons  <- maptools::unionSpatialPolygons(SPDF, ids_polygons)
Polygons  <- SPDF[ids_polygons,]
str(Polygons)
class(Polygons)
SPDF1  <- SPDF[ids_polygons,]
plot(SPDF1)
summary(SPDF)
class("SpatialPolygons")
class(SpatialPolygons)
get.class(SpatialPolygons)
?? class
getClass(Sptail)
getClass("Sptail")
getClass("Spatil")
getClass("Spatial")
getClass("SpatialPolygons")
getClass("SpatialPolygonsDataFrame")
getClass("SpatialPolygons")
getClass("Polygons")
getClass("Polygon")
getClass("Spatial")
phd.bigpolys
phd.bbox
source('~/.active-rstudio-document')
ibrary(diagram)
pos <- coordinates(pos=c(3,3,3,3,3,3))
View(pos)
cc <- c("Start",LETTERS[2:16],"End")
for(i in seq(1,15,by = 3)) straightarrow(from = pos[i,] ,to = pos[i+3,])
for(i in c(2,5,8)) straightarrow(from = pos[i,] ,to = pos[i+6,])
segmentarrow(from = pos[16,],to=pos[2,],path="RVL",dd=0.15)
bentarrow(from = pos[8,], to=pos[6,],path='H')
bentarrow(from = pos[6,], to=pos[2,],path='V')
straightarrow(from=pos[14,],to = pos[17,])
for(i in c(2,7,13,14,16)) textrect(pos[i,],radx=0.08,rady=0.04,lab = cc[i])
for(i in c(1,17)) textround(pos[i,],radx=0.08,rady=0.04,lab = cc[i])
textdiamond(mid = pos[8,],radx = 0.15,rady = 0.08,lab = c("Has","Detect?"))
textmulti(mid = pos[4,],radx=0.1,rady=0.05,nr=6)
textmulti(mid = pos[6,],radx=0.1,rady=0.05,nr=5)
textellipse(mid = pos[10,],radx = 0.1,rady = 0.05)
text(pos[8,1]+0.2,pos[8,2]+0.03,"YES",cex = 0.8)
text(pos[11,1]+0.04,pos[11,2],"NO",cex = 0.8)
ibrary(diagram)
pos <- coordinates(pos=c(3,3,3,3,3,3))
library(diagram)
pos <- coordinates(pos=c(3,3,3,3,3,3))
View(pos)
pos <- coordinates(pos=c(3,3,3,3,3,3))
plot(pos)
cc <- c("Start",LETTERS[2:16],"End")
plot(cc)
openplotmat(main="Flow Chart")
for(i in seq(1,15,by = 3)) straightarrow(from = pos[i,] ,to = pos[i+3,])
for(i in c(2,5,8)) straightarrow(from = pos[i,] ,to = pos[i+6,])
View(pos)
segmentarrow(from = pos[16,],to=pos[2,],path="RVL",dd=0.15)
bentarrow(from = pos[8,], to=pos[6,],path='H')
bentarrow(from = pos[6,], to=pos[2,],path='V')
straightarrow(from=pos[14,],to = pos[17,])
for(i in c(2,7,13,14,16)) textrect(pos[i,],radx=0.08,rady=0.04,lab = cc[i])
for(i in c(1,17)) textround(pos[i,],radx=0.08,rady=0.04,lab = cc[i])
textdiamond(mid = pos[8,],radx = 0.15,rady = 0.08,lab = c("Has","Detect?"))
textmulti(mid = pos[4,],radx=0.1,rady=0.05,nr=6)
textmulti(mid = pos[6,],radx=0.1,rady=0.05,nr=5)
textellipse(mid = pos[10,],radx = 0.1,rady = 0.05)
text(pos[8,1]+0.2,pos[8,2]+0.03,"YES",cex = 0.8)
text(pos[11,1]+0.04,pos[11,2],"NO",cex = 0.8)
pos <- coordinates(pos = c(4,4,4,4,4,4,4))
View(pos)
plot(pos)# plow.new
openplotmat(main="")
View(pos)
pos <- coordinates(pos = c(4,4,4,4,4,4,4))
plot(pos)# plow.new
for(i in c(1,9,17)) straightarrow(from = pos[i,] , to = pos[i + 4,],arr.pos=0.6)
for(i in c(5,13,21)) straightarrow(from = pos[i,] , to = pos[i + 4,],arr.pos=0.7)
for(i in 13:15) straightarrow(from = pos[i,] , to = pos[i + 1,])
for(i in 13:15) straightarrow(from = pos[i,] , to = pos[i + 1,], arr.pos = 0.9)
for(i in 13:15) straightarrow(from = pos[i,] , to = pos[i + 1,], arr.pos = 1.0)
for(i in 13:15) straightarrow(from = pos[i,] , to = pos[i + 1,])
bentarrow(from = pos[15,], to = pos[1,],path = 'V')
bentarrow(from = pos[5,], to = pos[14,],path = 'H')
bentarrow(from = pos[21,], to = pos[14,],path = 'H')
textrect(pos[1,],radx=0.06,rady=0.035,lab = c("阶段 I 试验"),cex = 0.8)
textrect(pos[9,],radx=0.06,rady=0.035,lab = c("阶段 II 试验"),cex = 0.8)
textrect(pos[17,],radx=0.06,rady=0.035,lab = c("阶段 III 试验"),cex = 0.8)
textrect(pos[14,],radx=0.06,rady=0.035,lab = c("返回研究"),cex = 0.8)
# 绘制菱形(判断)
for(i in c(5,13,21))textdiamond(pos[i,],radx = 0.07,rady = 0.055,lab = c("是否达","到目的?"),cex = 0.8)
textdiamond(pos[15,],radx = 0.07,rady = 0.055,lab = c("继续"),cex = 0.8)
# 圆形
textround(pos[25,],radx=0.04,rady=0.04,lab = c("删除审批提交"),cex = 0.8)
textround(pos[16,],radx=0.04,rady=0.04,lab = c("取消项目"),cex = 0.8)
# 添加文本
for(i in c(5,11,13,21)) text(pos[i,1] + 0.035,(pos[i,2]+pos[i+4,2])/2,"是")
for(i in c(5,13,15,21)) text((pos[i,1]+pos[i+1,1])/2,pos[i,2]+0.035,"否")
source('~/Dropbox/config/R/rLib/Linux64/3.1/diagram/demo/flowchart.r')
par(mar = c(1, 1, 1, 1), mfrow = c(2, 2))
names <- c("A", "B", "C", "D")
M <- matrix(nrow = 4, ncol = 4, byrow = TRUE, data = 0)
plotmat(M, pos = c(1, 2, 1), name = names, lwd = 1,
box.lwd = 2, cex.txt = 0.8, box.size = 0.1,
box.type = "square", box.prop = 0.5)
M[2, 1] <- M[3, 1] <- M[4, 2] <- M[4, 3] <- "flow"
plotmat(M, pos = c(1, 2, 1), curve = 0, name = names, lwd = 1,
box.lwd = 2, cex.txt = 0.8, box.type = "circle", box.prop = 1.0)
#
diag(M) <- "self"
plotmat(M, pos = c(2, 2), curve = 0, name = names, lwd = 1, box.lwd = 2,
cex.txt = 0.8, self.cex = 0.5, self.shiftx = c(-0.1, 0.1, -0.1, 0.1),
box.type = "diamond", box.prop = 0.5)
M <- matrix(nrow = 4, ncol = 4, data = 0)
M[2, 1] <- 1 ; M[4, 2] <- 2 ; M[3, 4] <- 3 ; M[1, 3] <- 4
Col <- M
Col[] <- "black"
Col[4, 2] <- "darkred"
pp <- plotmat(M, pos = c(1, 2, 1), curve = 0.2, name = names, lwd = 1,
box.lwd = 2, cex.txt = 0.8, arr.type = "triangle",
box.size = 0.1, box.type = "hexa", box.prop = 0.25,
arr.col = Col, arr.len = 1)
mtext(outer = TRUE, side = 3, line = -1.5, cex = 1.5, "plotmat")
#
par(mfrow = c(1, 1))
###################################################
### code chunk number 3: diagram.Rnw:160-161
###################################################
pp
###################################################
### code chunk number 4: fig1
###################################################
par(mar = c(1, 1, 1, 1), mfrow = c(2, 2))
#
names <- c("A", "B", "C", "D")
M <- matrix(nrow = 4, ncol = 4, byrow = TRUE, data = 0)
plotmat(M, pos = c(1, 2, 1), name = names, lwd = 1,
box.lwd = 2, cex.txt = 0.8, box.size = 0.1,
box.type = "square", box.prop = 0.5)
M[2, 1] <- M[3, 1] <- M[4, 2] <- M[4, 3] <- "flow"
plotmat(M, pos = c(1, 2, 1), curve = 0, name = names, lwd = 1,
box.lwd = 2, cex.txt = 0.8, box.type = "circle", box.prop = 1.0)
#
diag(M) <- "self"
plotmat(M, pos = c(2, 2), curve = 0, name = names, lwd = 1, box.lwd = 2,
cex.txt = 0.8, self.cex = 0.5, self.shiftx = c(-0.1, 0.1, -0.1, 0.1),
box.type = "diamond", box.prop = 0.5)
M <- matrix(nrow = 4, ncol = 4, data = 0)
M[2, 1] <- 1 ; M[4, 2] <- 2 ; M[3, 4] <- 3 ; M[1, 3] <- 4
Col <- M
Col[] <- "black"
Col[4, 2] <- "darkred"
pp <- plotmat(M, pos = c(1, 2, 1), curve = 0.2, name = names, lwd = 1,
box.lwd = 2, cex.txt = 0.8, arr.type = "triangle",
box.size = 0.1, box.type = "hexa", box.prop = 0.25,
arr.col = Col, arr.len = 1)
mtext(outer = TRUE, side = 3, line = -1.5, cex = 1.5, "plotmat")
#
par(mfrow = c(1, 1))
###################################################
### code chunk number 5: plotmat2
###################################################
names <- c("PHYTO", "NH3", "ZOO", "DETRITUS", "BotDET", "FISH")
M <- matrix(nrow = 6, ncol = 6, byrow = TRUE, data = c(
#   p  n  z   d   b   f
0, 1, 0,  0,  0,  0, #p
0, 0, 4, 10, 11,  0, #n
2, 0, 0,  0,  0,  0, #z
8, 0, 13, 0,  0, 12, #d
9, 0, 0,  7,  0,  0, #b
0, 0, 5,  0,  0,  0  #f
))
#
pp <- plotmat(M, pos = c(1, 2, 1, 2), curve = 0, name = names,
lwd = 1, box.lwd = 2, cex.txt = 0.8,
box.type = "square", box.prop = 0.5, arr.type = "triangle",
arr.pos = 0.4, shadow.size = 0.01, prefix = "f",
main = "NPZZDD model")
phyto    <- pp$comp[names=="PHYTO"]
zoo      <- pp$comp[names=="ZOO"]
nh3      <- pp$comp[names=="NH3"]
detritus <- pp$comp[names=="DETRITUS"]
fish     <- pp$comp[names=="FISH"]
#
# flow5->detritus
diag(M) <- "self"
plotmat(M, pos = c(2, 2), curve = 0, name = names, lwd = 1, box.lwd = 2,
cex.txt = 0.8, self.cex = 0.5, self.shiftx = c(-0.1, 0.1, -0.1, 0.1),
box.type = "diamond", box.prop = 0.5)
M[2, 1] <- 1 ; M[4, 2] <- 2 ; M[3, 4] <- 3 ; M[1, 3] <- 4
Col <- M
Col[] <- "black"
Col[4, 2] <- "darkred"
pp <- plotmat(M, pos = c(1, 2, 1), curve = 0.2, name = names, lwd = 1,
box.lwd = 2, cex.txt = 0.8, arr.type = "triangle",
box.size = 0.1, box.type = "hexa", box.prop = 0.25,
arr.col = Col, arr.len = 1)
source('~/Dropbox/config/R/rLib/Linux64/3.1/diagram/doc/diagram.R')
source('~/Dropbox/config/R/rLib/Linux64/3.1/diagram/doc/changes.txt.r')
source('~/Dropbox/config/R/rLib/Linux64/3.1/diagram/demo/plotmat.r')
source('~/Dropbox/config/R/rLib/Linux64/3.1/diagram/demo/plotweb.r')
View(feed)
feed <- matrix(nrow=20,ncol=20,1)
plotweb(feed,legend=FALSE,length=0,main="plotweb")
feed <- matrix(nrow=20,ncol=20,1)
diag(feed)<-0
plotweb(feed,legend=FALSE,main="plotweb")
par(ask=FALSE)
par(mar=c(1,1,1,1),mfrow=c(2,2))
plot()
plotpar()
plot(par)
names <- c("A","B","C","D")
M <- matrix(nrow=4,ncol=4,byrow=TRUE,data=0)
pp<-plotmat(M,pos=c(1,2,1),name=names,lwd=1,box.lwd=2,cex.txt=0.8,
box.size=0.1,box.type="square",box.prop=0.5)
plot(M)
pp<-plotmat(M,pos=c(1,2,1))
pp<-plotmat(M,pos=c(1,3,1))
pp<-plotmat(M,pos=c(1,1,1))
pp<-plotmat(M,pos=c(2,2,1))
pp<-plotmat(M,pos=c(2,1,1))
View(M)
plot(M)
M[2,1]<-M[3,1]<-M[4,2]<-M[4,3] <- "flow"
pp<-plotmat(M,pos=c(1,2,1),curve=0,name=names,lwd=1,box.lwd=2,cex.txt=0.8,
box.type="circle",box.prop=1.0)
M[4,3]
M
M[2,1]<- "flow"
pp<-plotmat(M,pos=c(1,2,1),curve=0,name=names,lwd=1,box.lwd=2,cex.txt=0.8,
box.type="circle",box.prop=1.0)
M[2,1]<- "flow"
M
M <- matrix(nrow=4,ncol=4,byrow=TRUE,data=0)
M[2,1]<- "flow"
M
pp<-plotmat(M,pos=c(1,2,1),curve=0,name=names,lwd=1,box.lwd=2,cex.txt=0.8,
box.type="circle",box.prop=1.0)
M[2,1]<- "flow"
M[1,1] <- "look"
M
pp<-plotmat(M,pos=c(1,2,1),curve=0,name=names,lwd=1,box.lwd=2,cex.txt=0.8,
box.type="circle",box.prop=1.0)
pp<-plotmat(M,pos=c(2,1,1))
pp<-plotmat(M,pos=c(1,1,1,1))
pp<-plotmat(M,pos=c(1,3))
M[2,1]<- 0
pp<-plotmat(M,pos=c(1,3))
M[2,1]<- 1
pp<-plotmat(M,pos=c(1,3))
pos <- coordinates(pos = c(4,4,4,4,4,4,4))
class(pos)
source('~/.active-rstudio-document')
par(mfrow=c(2,1))
Numgenerations   <- 6
DiffMat  <- matrix(data=0,nrow=Numgenerations,ncol=Numgenerations)   # declare it
DiffMat
AA <- as.data.frame(DiffMat)
AA[[1,4]]<- "f[3]"
AA[[1,5]]<- "f[4]"
AA[[1,6]]<- "f[5]"
AA[[2,1]]<- "s[list(0,1)]"
AA[[3,2]]<- "s[list(1,2)]"
AA[[4,3]]<- "s[list(2,3)]"
AA[[5,4]]<- "s[list(3,4)]"
AA[[6,5]]<- "s[list(4,5)]"
AA
name  <- c("Age0","Age1","Age2","Age3","Age4","Age5")
PP <- plotmat(A=AA,pos=6,curve=0.7,name=name,lwd=2,arr.len=0.6,arr.width=0.25,my=-0.2,
box.size=0.05,arr.type="triangle",dtext= 0.95,cex.txt=0,
main="Age-structured population model 1")
for (i in 1:nrow(PP$arr))
text(as.double(PP$arr[i,"TextX"]),as.double(PP$arr[i,"TextY"]),
parse(text=as.character(PP$arr[i,"Value"])))
Numgenerations   <- Numgenerations-1
DiffMat          <- DiffMat[-1,-1]
AA <- as.data.frame(DiffMat)
AA[[1,3]]<- "f[3]*s[list(0,1)]"
AA[[1,4]]<- "f[4]*s[list(0,1)]"
AA[[1,5]]<- "f[5]*s[list(0,1)]"
AA[[2,1]]<- "s[list(0,2)]"
AA[[3,2]]<- "s[list(2,3)]"
AA[[4,3]]<- "s[list(3,4)]"
AA[[5,4]]<- "s[list(4,5)]"
name  <- c("Age0","Age2","Age3","Age4","Age5")
pos <- PP$comp[-1,]
PP <- plotmat(AA,pos=pos,curve=0.7,name=name,lwd=2,arr.len=0.6,arr.width=0.25,my=-0.1,
box.size=0.05,arr.type="triangle",dtext= 0.95,cex.txt=0,main="Age-structured population model 2")
for (i in 1:nrow(PP$arr))
text(as.double(PP$arr[i,"TextX"]),as.double(PP$arr[i,"TextY"]),
parse(text=as.character(PP$arr[i,"Value"])))
par(mfrow=c(1,1),mar=c(2,2,2,2))
#################3
par(mfrow=c(1,1))
par(mar=c(4,4,4,4))
par(xaxs="r",yaxs="r")
# Fecundity and Survival for each generation
NumClass    <- 10
Fecundity   <- c(0,      0.00102,0.08515,0.30574,0.40002,
0.28061,0.1526 ,0.0642 ,0.01483,0.00089)
Survival    <- c(0.9967 ,0.99837,0.9978 ,0.99672,0.99607,
0.99472,0.99240,0.98867,0.98274,NA)            # survival from i to i+1
cbind(Fecundity,Survival)
# Population matrix M
DiffMatrix       <- matrix(data=0,nrow=NumClass,ncol=NumClass)     # declare it
DiffMatrix[1,]   <- Fecundity                                      # first row: fecundity
for (i in 1:(NumClass-1))  DiffMatrix[i+1,i] <- Survival[i]
DiffMatrix                                                         # print the matrix to screen
names <- c("0-5yr","5-10yr","10-15yr","15-20yr","20-25yr","25-30yr","30-35yr","35-40yr","40-45yr","45-50yr")
# first generation will be positioned in middle; other generations on a circle
pos <- coordinates(NULL,N=NumClass-1)
pos <- rbind(c(0.5,0.5),pos)
curves <- DiffMatrix
curves[]   <- -0.4
curves[1, ] <- 0
curves[2,1] <- -0.125
curves[1,2] <- -0.125
plotmat(main="US population, life cycle, 1966",DiffMatrix,pos=pos,name=names,curve=curves,lcol="darkblue",arr.col="lightblue",
box.size=0.07,arr.type="triangle",cex.txt=0.8,box.col="lightyellow",box.prop =1)
#####
A        <- matrix(nrow=7,ncol=7,NA)
A[,1]    <- 1 ; A[1,1]<-0
pos <- coordinates(NULL,N=6,relsize=0.8)       # 6 boxes in circle
pos <- rbind(c(0.5,0.5),pos)       # one in middle
plotmat(A,pos=pos,lwd=1,curve=0,box.lwd=2,cex.txt=0.8,box.col=2:8,
box.cex=0.8,box.size=0.125,arr.length=0.5,box.type=c("multi","rect","ellipse"),
shadow.size = 0.01,nr=5,main="plotmat")
# TRANSITION MATRIX EXAMPLE
# dataset Teasel
curves <- matrix(nrow=ncol(Teasel),ncol=ncol(Teasel),0)
curves[3,1]<- curves[1,6]<- -0.35
curves[4,6]<-curves[6,4]<-curves[5,6]<-curves[6,5]<-0.08
curves[3,6]<-  0.35
plotmat(Teasel,pos=c(3,2,1),curve=curves,name=colnames(Teasel),lwd=1,box.lwd=2,cex.txt=0.8,
box.cex=0.8,box.size=0.08,arr.length=0.5,box.type="circle",box.prop=1,
shadow.size = 0.01,self.cex=0.6,my=-0.075, mx=-0.01,relsize=0.9,
self.shiftx=c(0,0,0.125,-0.12,0.125,0),self.shifty=0,main="Teasel population model")
curves
colnames(Teasel)
Teasel
curves
plotmat(Teasel,pos=c(3,2,1),name=colnames(Teasel),lwd=1,box.lwd=2,cex.txt=0.8,
box.cex=0.8,box.size=0.08,arr.length=0.5,box.type="circle",box.prop=1,
shadow.size = 0.01,self.cex=0.6,my=-0.075, mx=-0.01,relsize=0.9,
self.shiftx=c(0,0,0.125,-0.12,0.125,0),self.shifty=0,main="Teasel population model")
curves <- matrix(nrow=ncol(Teasel),ncol=ncol(Teasel),0)
curves[3,1]<- curves[1,6]<- -0.35
curves[4,6]<-curves[6,4]<-curves[5,6]<-curves[6,5]<-0.08
curves[3,6]<-  0.8
curves
Teasel
plotmat(Teasel,pos=c(3,2,1),name=colnames(Teasel),lwd=1,box.lwd=2,cex.txt=0.8,
box.cex=0.8,box.size=0.08,arr.length=0.5,box.type="circle",box.prop=1,
shadow.size = 0.01,self.cex=0.6,my=-0.075, mx=-0.01,relsize=0.9,
self.shiftx=c(0,0,0.125,-0.12,0.125,0),self.shifty=0,main="Teasel population model")
curves[3,6]<-  0.8
curves <- matrix(nrow=ncol(Teasel),ncol=ncol(Teasel),0)
curves[3,1]<- curves[1,6]<- -0.35
curves[4,6]<-curves[6,4]<-curves[5,6]<-curves[6,5]<-0.08
curves[3,6]<-  0.8
curves
plotmat(Teasel,pos=c(3,2,1),curve = curves,name=colnames(Teasel),lwd=1,box.lwd=2,cex.txt=0.8,
box.cex=0.8,box.size=0.08,arr.length=0.5,box.type="circle",box.prop=1,
shadow.size = 0.01,self.cex=0.6,my=-0.075, mx=-0.01,relsize=0.9,
self.shiftx=c(0,0,0.125,-0.12,0.125,0),self.shifty=0,main="Teasel population model")
feed <- matrix(nrow=20,ncol=20,1)
plotweb(feed,legend=FALSE,length=0,main="plotweb")
feed <- matrix(nrow=20,ncol=20, 0)
plotweb(feed,legend=FALSE,length=0,main="plotweb")
feed <- matrix(nrow=20,ncol=20, 3)
plotweb(feed,legend=FALSE,length=0,main="plotweb")
feed <- matrix(nrow=20,ncol=20, 1)
plotweb(feed,legend=FALSE,length=0,main="plotweb")
feed <- matrix(nrow=20,ncol=20,1)
plotweb(feed,legend=FALSE,length=0,main="plotweb")
plotweb(feed,length=0,main="plotweb")
feed <- matrix(nrow=20,ncol=20,1)
diag(feed)<-0
plotweb(feed,legend=FALSE,main="plotweb")
feed <- diag(nrow=20,ncol=20,1)
plotweb(feed,legend=FALSE,main="plotweb")
plotweb(Rigaweb,main="Gulf of Riga food web",sub="mgC/m3/d",val=TRUE)
Rigaweb
plotweb(Takapotoweb,main="Takapoto atoll planktonic food web",leg.title="mgC/m2/day",lab.size=1)
Takapotoweb
d  <- Takapotoweb
View(d)
plotweb(feed)
plotmatfeed)
plotmat(feed)
source('~/.active-rstudio-document', echo=TRUE)
sub  <- phd.largestPolys(jp1, Polygon =T)
source('~/Win7/Air/Dropbox/5opts/purlphdFunctions.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
grid_s  <- grid_p[dub,]
grid_s  <- grid_p[sub,]
sp::proj4string(grid_p)
sp::proj4string(grid_p) == sp::proj4string(sub)
sp::proj4string(sub)
source('~/Win7/Air/Dropbox/5opts/purlphdFunctions.R', echo=TRUE)
sp::proj4string(grid_p)  <- sp::proj4string(sub)
grid_s  <- grid_p[sub,]
grid_sr  <- raster::raster(grid_s)
plot(grid_sr)
sp::plot(grid_sr)
grid_r[]  <- 1
sp::plot(grid_r)
grid_r  <- raster::raster(grid_i)
grid_r[]  <- 1
sp::plot(grid_r)
sp::plot(grid_sr)
grid_sr[]  <- 1
sp::plot(grid_sr)
raster::plot(grid_sr)
spplot(grid_sr)
sp::spplot(grid_sr)
sp::spplot(grid_r)
sp::plot(grid_r)
sp::plot(grid_sr)
??GIS
volQsub2 <- volQ[sub,]
volA  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol110_140812_174525.Rds")
volQ  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol455_140812_172148.Rds")
bh  <- readRDS("~/Dropbox/2data/dataProduct/hkd/hkd_profiles_140806_164333.Rds")
volQsub2 <- volQ[sub,]
sp::proj4string(bbox_SPDF) == sp::proj4string(volQ)
sp::proj4string(volQ) <- sp::proj4string(bbox_SPDF)
volQsub <- volQ[bbox_SPDF,]
volQsub2 <- volQ[sub,]
sub  <- phd.largestPolys(jp1, Polygon =T)
volQsub2 <- volQ[sub,]
sp::proj4string(volQ) <- sp::proj4string(sub)
volQsub2 <- volQ[sub,]
length(volQsub2)
length(volQsub)
volAsub <- volA[bbox_SPDF,]
sp::proj4string(volA) <- sp::proj4string(sub)
volAsub2 <- volA[sub,]
volAsub2
length(volAsub2)
<<StudyArea, child = "./STUDYAREA/studyarea.Rnw">>=
@
hkdTerrain  <- readRDS("~/Dropbox/2data/dataProduct/hkd/hkd_google_satellite_142.5_43.5_zoom7_140815_2131.Rds")
#Sapporo  <- phd.geocode(c("Sapporo"))
sap  <- readRDS("~/Dropbox/2data/data/Sapporo_140817_162919.Rds")
basemap  <- hkdTerrain
breaksX  <- seq(139,146, 1)
labelsX=parse(text=paste(breaksX, "^o ", "*E", sep=""))
breaksY  <- seq(41,46, 1)
labelsY=parse(text=paste(breaksY, "^o ", "*N", sep=""))
## Layer0: Base map
hkd  <-  ggmap(basemap, extent = "panel") +
### Layers
geom_point(data = bh_xy, aes(Lon, Lat,fill = grp, size = grp), shape = 21, alpha = 0.9) +
### X
xlab("Lontitude") +
scale_x_continuous(breaks=breaksX, labels=labelsX,expand = c(0.01,0.01)) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5, vjust = 0)) +
### Y
ylab("Latitude") +
scale_y_continuous(breaks=breaksY, labels=labelsY,expand = c(0.01,0.01)) +
###Legend
### Size
labs(size = "Borehole Depth (m)") +
scale_size_manual(values=c(1,1.5,2,3,4)) +
### fill
scale_fill_brewer("Borehole Depth (m)", palette="Blues") +
### Color
geom_point(data = volQsub@data, aes(as.numeric(lon), as.numeric(lat), color="blue"), shape = 17, alpha = 0.7) +
geom_point(data = volAsub@data, aes(as.numeric(lon), as.numeric(lat), color="red"),  shape = 17, size = 3)  +
scale_color_manual(name =  "Volcanoes", values = c("orange","red"), labels = c("Quaternary Volcanoes","Active Volcanoes")) +
geom_path(data = volQsub2@data, aes(as.numeric(lon), as.numeric(lat)),size = 12, alpha = 0.4, colour = "pink",lineend = "round") +
geom_point(data = sap, aes(x = lon, y = lat), colour = "White")  + geom_text(data = sap, aes(x = lon, y = lat, label = name), hjust = -0.1,family="Times", face="italic", colour="white") +
scaleBar(lon = 144.4, lat = 41, distanceLon = 50, distanceLegend = 30,distanceLat = 15, dist.unit = "km", arrow.length = 60, arrow.distance = 480, arrow.North.size = 4,legend.colour = "white", arrow.North.color = "white", arrow.colour = "blue") +
theme_bw(base_family = "Times", base_size = 10)
# setwd(figsDir)
# phd.ggsave(p2)
hkd  <-  ggmap::ggmap(basemap, extent = "panel") +
### Layers
geom_point(data = bh_xy, aes(Lon, Lat,fill = grp, size = grp), shape = 21, alpha = 0.9) +
### X
xlab("Lontitude") +
scale_x_continuous(breaks=breaksX, labels=labelsX,expand = c(0.01,0.01)) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5, vjust = 0)) +
### Y
ylab("Latitude") +
scale_y_continuous(breaks=breaksY, labels=labelsY,expand = c(0.01,0.01)) +
###Legend
### Size
labs(size = "Borehole Depth (m)") +
scale_size_manual(values=c(1,1.5,2,3,4)) +
### fill
scale_fill_brewer("Borehole Depth (m)", palette="Blues") +
### Color
geom_point(data = volQsub@data, aes(as.numeric(lon), as.numeric(lat), color="blue"), shape = 17, alpha = 0.7) +
geom_point(data = volAsub@data, aes(as.numeric(lon), as.numeric(lat), color="red"),  shape = 17, size = 3)  +
scale_color_manual(name =  "Volcanoes", values = c("orange","red"), labels = c("Quaternary Volcanoes","Active Volcanoes")) +
geom_path(data = volQsub2@data, aes(as.numeric(lon), as.numeric(lat)),size = 12, alpha = 0.4, colour = "pink",lineend = "round") +
geom_point(data = sap, aes(x = lon, y = lat), colour = "White")  + geom_text(data = sap, aes(x = lon, y = lat, label = name), hjust = -0.1,family="Times", face="italic", colour="white") +
scaleBar(lon = 144.4, lat = 41, distanceLon = 50, distanceLegend = 30,distanceLat = 15, dist.unit = "km", arrow.length = 60, arrow.distance = 480, arrow.North.size = 4,legend.colour = "white", arrow.North.color = "white", arrow.colour = "blue") +
theme_bw(base_family = "Times", base_size = 10)
# setwd(figsDir)
# phd.ggsave(p2)
hkd
hkd  <-  ggmap::ggmap(basemap, extent = "panel") +
### Layers
geom_point(data = bh_xy, aes(Lon, Lat,fill = grp, size = grp), shape = 21, alpha = 0.9) +
### X
xlab("Lontitude") +
scale_x_continuous(breaks=breaksX, labels=labelsX,expand = c(0.01,0.01)) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5, vjust = 0)) +
### Y
ylab("Latitude") +
scale_y_continuous(breaks=breaksY, labels=labelsY,expand = c(0.01,0.01)) +
###Legend
### Size
labs(size = "Borehole Depth (m)") +
scale_size_manual(values=c(1,1.5,2,3,4)) +
### fill
scale_fill_brewer("Borehole Depth (m)", palette="Blues") +
### Color
geom_point(data = volQsub@data, aes(as.numeric(lon), as.numeric(lat), color="blue"), shape = 17, alpha = 0.7) +
geom_point(data = volAsub@data, aes(as.numeric(lon), as.numeric(lat), color="red"),  shape = 17, size = 3)  +
scale_color_manual(name =  "Volcanoes", values = c("orange","red"), labels = c("Quaternary Volcanoes","Active Volcanoes")) +
geom_path(data = volQsub2@data, aes(as.numeric(lon), as.numeric(lat)),size = 12, alpha = 0.4, colour = "pink",lineend = "round") +
geom_point(data = sap, aes(x = lon, y = lat), colour = "White")  + geom_text(data = sap, aes(x = lon, y = lat, label = name), hjust = -0.1,family="Times", face="italic", colour="white") +
scaleBar(lon = 144.4, lat = 41, distanceLon = 50, distanceLegend = 30,distanceLat = 15, dist.unit = "km", arrow.length = 60, arrow.distance = 480, arrow.North.size = 4,legend.colour = "white", arrow.North.color = "white", arrow.colour = "blue") +
theme_bw(base_family = "Times", base_size = 10)
library(ggmap)
library(ggplot2)
hkd  <-  ggmap(basemap, extent = "panel") +
### Layers
geom_point(data = bh_xy, aes(Lon, Lat,fill = grp, size = grp), shape = 21, alpha = 0.9) +
### X
xlab("Lontitude") +
scale_x_continuous(breaks=breaksX, labels=labelsX,expand = c(0.01,0.01)) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5, vjust = 0)) +
### Y
ylab("Latitude") +
scale_y_continuous(breaks=breaksY, labels=labelsY,expand = c(0.01,0.01)) +
###Legend
### Size
labs(size = "Borehole Depth (m)") +
scale_size_manual(values=c(1,1.5,2,3,4)) +
### fill
scale_fill_brewer("Borehole Depth (m)", palette="Blues") +
### Color
geom_point(data = volQsub@data, aes(as.numeric(lon), as.numeric(lat), color="blue"), shape = 17, alpha = 0.7) +
geom_point(data = volAsub@data, aes(as.numeric(lon), as.numeric(lat), color="red"),  shape = 17, size = 3)  +
scale_color_manual(name =  "Volcanoes", values = c("orange","red"), labels = c("Quaternary Volcanoes","Active Volcanoes")) +
geom_path(data = volQsub2@data, aes(as.numeric(lon), as.numeric(lat)),size = 12, alpha = 0.4, colour = "pink",lineend = "round") +
geom_point(data = sap, aes(x = lon, y = lat), colour = "White")  + geom_text(data = sap, aes(x = lon, y = lat, label = name), hjust = -0.1,family="Times", face="italic", colour="white") +
scaleBar(lon = 144.4, lat = 41, distanceLon = 50, distanceLegend = 30,distanceLat = 15, dist.unit = "km", arrow.length = 60, arrow.distance = 480, arrow.North.size = 4,legend.colour = "white", arrow.North.color = "white", arrow.colour = "blue") +
theme_bw(base_family = "Times", base_size = 10)
# setwd(figsDir)
# phd.ggsave(p2)
hkd
source('~/.active-rstudio-document', echo=TRUE)
xmin <- 139
xmax <- 146
ymin <- 41.4
ymax <- 45.8
crs  <- wgs84GRS
prs  <- lccWgs84
bbox_SPDF <- phd.bbox(xmin,xmax,ymin,ymax,crs)
jp1  <- raster::getData('GADM', country='JPN', level=1, path = "~/Dropbox/2data//dataRaw/gadm2")
jp2  <- raster::getData('GADM', country='JPN', level=2, path = "~/Dropbox/2data//dataRaw/gadm2")
sub  <- phd.largestPolys(jp1, Polygon =T)
bh  <- readRDS("~/Dropbox/2data/dataProduct/hkd/hkd_profiles_140806_164333.Rds")
bh_xy  <- bh[!duplicated(bh$ID),]
summary(bh_xy)
bh_xy$grp <- cut(bh_xy$TD, breaks = c(0,500,1000,1500,2000,2200), labels = c("0-500","500-1000","1000-1500","1500-2000","2000-2200"))
volA  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol110_140812_174525.Rds")
volQ  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol455_140812_172148.Rds")
sp::proj4string(volQ) <- sp::proj4string(bbox_SPDF)
volQsub <- volQ[bbox_SPDF,]
sp::proj4string(volQ) <- sp::proj4string(sub)
volQsub2 <- volQ[sub,]
sp::proj4string(volA) <- sp::proj4string(bbox_SPDF)
volAsub <- volA[bbox_SPDF,]
sp::proj4string(volA) <- sp::proj4string(sub)
volAsub2 <- volA[sub,]
ggmap(hkdTerrain)
plot(bh$Lon, bh$Lat, pch = 20, xlab = "Longitude", ylab = "Latitude", xlim = c(xmin,xmax), ylim = c(ymin,ymax) ,add = TRUE)
sp::plot(volAsub, pch = 17, col = "red", add = TRUE)
sp::plot(volQsub, col = "blue", add = TRUE)
sp::plot(sub, add = TRUE)
hkd
library(ggmap)
library(ggplot2)
library(gridExtra)
#sp::coordinates(sub)
#phd.getGoogleMap(142.5, 43.5, 7, "hkd")
hkdTerrain  <- readRDS("~/Dropbox/2data/dataProduct/hkd/hkd_google_satellite_142.5_43.5_zoom7_140815_2131.Rds")
#Sapporo  <- phd.geocode(c("Sapporo"))
sap  <- readRDS("~/Dropbox/2data/data/Sapporo_140817_162919.Rds")
basemap  <- hkdTerrain
breaksX  <- seq(139,146, 1)
labelsX=parse(text=paste(breaksX, "^o ", "*E", sep=""))
breaksY  <- seq(41,46, 1)
labelsY=parse(text=paste(breaksY, "^o ", "*N", sep=""))
## Layer0: Base map
hkd  <-  ggmap(basemap, extent = "panel") +
### Layers
geom_point(data = bh_xy, aes(Lon, Lat,fill = grp, size = grp), shape = 21, alpha = 0.9) +
### X
xlab("Lontitude") +
scale_x_continuous(breaks=breaksX, labels=labelsX,expand = c(0.01,0.01)) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5, vjust = 0)) +
### Y
ylab("Latitude") +
scale_y_continuous(breaks=breaksY, labels=labelsY,expand = c(0.01,0.01)) +
###Legend
### Size
labs(size = "Borehole Depth (m)") +
scale_size_manual(values=c(1,1.5,2,3,4)) +
### fill
scale_fill_brewer("Borehole Depth (m)", palette="Blues") +
### Color
geom_point(data = volQsub@data, aes(as.numeric(lon), as.numeric(lat), color="blue"), shape = 17, alpha = 0.7) +
geom_point(data = volAsub@data, aes(as.numeric(lon), as.numeric(lat), color="red"),  shape = 17, size = 3)  +
scale_color_manual(name =  "Volcanoes", values = c("orange","red"), labels = c("Quaternary Volcanoes","Active Volcanoes")) +
geom_path(data = volQsub2@data, aes(as.numeric(lon), as.numeric(lat)),size = 12, alpha = 0.4, colour = "pink",lineend = "round") +
geom_point(data = sap, aes(x = lon, y = lat), colour = "White")  + geom_text(data = sap, aes(x = lon, y = lat, label = name), hjust = -0.1,family="Times", face="italic", colour="white") +
scaleBar(lon = 144.4, lat = 41, distanceLon = 50, distanceLegend = 30,distanceLat = 15, dist.unit = "km", arrow.length = 60, arrow.distance = 480, arrow.North.size = 4,legend.colour = "white", arrow.North.color = "white", arrow.colour = "blue") +
theme_bw(base_family = "Times", base_size = 10)
# setwd(figsDir)
# phd.ggsave(p2)
hkd
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volQ@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17)
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_satellite_137.5_35_zoom5_140817_1433.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volQ@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17)
jp
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17)
jp
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17)
jp
tokyo  <- phd.geocode("Tokyo")
View(tokyo)
phd.write.csv(tokyo)
phd.write.csv
xmin <- 139
xmax <- 146
ymin <- 41.4
ymax <- 45.8
crs  <- wgs84GRS
prs  <- lccWgs84
bbox_SPDF <- phd.bbox(xmin,xmax,ymin,ymax,crs)
jp1  <- raster::getData('GADM', country='JPN', level=1, path = "~/Dropbox/2data//dataRaw/gadm2")
jp2  <- raster::getData('GADM', country='JPN', level=2, path = "~/Dropbox/2data//dataRaw/gadm2")
sub  <- phd.largestPolys(jp1, Polygon =T)
bh  <- readRDS("~/Dropbox/2data/dataProduct/hkd/hkd_profiles_140806_164333.Rds")
bh_xy  <- bh[!duplicated(bh$ID),]
summary(bh_xy)
bh_xy$grp <- cut(bh_xy$TD, breaks = c(0,500,1000,1500,2000,2200), labels = c("0-500","500-1000","1000-1500","1500-2000","2000-2200"))
volA  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol110_140812_174525.Rds")
volQ  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol455_140812_172148.Rds")
sp::proj4string(volQ) <- sp::proj4string(bbox_SPDF)
volQsub <- volQ[bbox_SPDF,]
sp::proj4string(volQ) <- sp::proj4string(sub)
volQsub2 <- volQ[sub,]
sp::proj4string(volA) <- sp::proj4string(bbox_SPDF)
volAsub <- volA[bbox_SPDF,]
sp::proj4string(volA) <- sp::proj4string(sub)
volAsub2 <- volA[sub,]
ggmap(hkdTerrain)
plot(bh$Lon, bh$Lat, pch = 20, xlab = "Longitude", ylab = "Latitude", xlim = c(xmin,xmax), ylim = c(ymin,ymax) ,add = TRUE)
sp::plot(volAsub, pch = 17, col = "red", add = TRUE)
sp::plot(volQsub, col = "blue", add = TRUE)
sp::plot(sub, add = TRUE)
xmin <- 139
xmax <- 146
ymin <- 41.4
ymax <- 45.8
crs  <- wgs84GRS
prs  <- lccWgs84
bbox_SPDF <- phd.bbox(xmin,xmax,ymin,ymax,crs)
jp1  <- raster::getData('GADM', country='JPN', level=1, path = "~/Dropbox/2data//dataRaw/gadm2")
jp2  <- raster::getData('GADM', country='JPN', level=2, path = "~/Dropbox/2data//dataRaw/gadm2")
sub  <- phd.largestPolys(jp1, Polygon =T)
bh  <- readRDS("~/Dropbox/2data/dataProduct/hkd/hkd_profiles_140806_164333.Rds")
bh_xy  <- bh[!duplicated(bh$ID),]
summary(bh_xy)
bh_xy$grp <- cut(bh_xy$TD, breaks = c(0,500,1000,1500,2000,2200), labels = c("0-500","500-1000","1000-1500","1500-2000","2000-2200"))
volA  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol110_140812_174525.Rds")
volQ  <- readRDS("~/Dropbox/2data/dataProduct/jpVolcanoes/jpVol455_140812_172148.Rds")
sp::proj4string(volQ) <- sp::proj4string(bbox_SPDF)
volQsub <- volQ[bbox_SPDF,]
sp::proj4string(volQ) <- sp::proj4string(sub)
volQsub2 <- volQ[sub,]
sp::proj4string(volA) <- sp::proj4string(bbox_SPDF)
volAsub <- volA[bbox_SPDF,]
sp::proj4string(volA) <- sp::proj4string(sub)
volAsub2 <- volA[sub,]
ggmap(hkdTerrain)
plot(bh$Lon, bh$Lat, pch = 20, xlab = "Longitude", ylab = "Latitude", xlim = c(xmin,xmax), ylim = c(ymin,ymax) ,add = TRUE)
sp::plot(volAsub, pch = 17, col = "red", add = TRUE)
sp::plot(volQsub, col = "blue", add = TRUE)
sp::plot(sub, add = TRUE)
library(ggmap)
library(ggplot2)
library(gridExtra)
#sp::coordinates(sub)
#phd.getGoogleMap(142.5, 43.5, 7, "hkd")
hkdTerrain  <- readRDS("~/Dropbox/2data/dataProduct/hkd/hkd_google_satellite_142.5_43.5_zoom7_140815_2131.Rds")
#Sapporo  <- phd.geocode(c("Sapporo"))
sap  <- readRDS("~/Dropbox/2data/data/Sapporo_140817_162919.Rds")
basemap  <- hkdTerrain
breaksX  <- seq(139,146, 1)
labelsX=parse(text=paste(breaksX, "^o ", "*E", sep=""))
breaksY  <- seq(41,46, 1)
labelsY=parse(text=paste(breaksY, "^o ", "*N", sep=""))
## Layer0: Base map
hkd  <-  ggmap(basemap, extent = "panel") +
### Layers
geom_point(data = bh_xy, aes(Lon, Lat,fill = grp, size = grp), shape = 21, alpha = 0.9) +
### X
xlab("Lontitude") +
scale_x_continuous(breaks=breaksX, labels=labelsX,expand = c(0.01,0.01)) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5, vjust = 0)) +
### Y
ylab("Latitude") +
scale_y_continuous(breaks=breaksY, labels=labelsY,expand = c(0.01,0.01)) +
###Legend
### Size
labs(size = "Borehole Depth (m)") +
scale_size_manual(values=c(1,1.5,2,3,4)) +
### fill
scale_fill_brewer("Borehole Depth (m)", palette="Blues") +
### Color
geom_point(data = volQsub@data, aes(as.numeric(lon), as.numeric(lat), color="blue"), shape = 17, alpha = 0.7) +
geom_point(data = volAsub@data, aes(as.numeric(lon), as.numeric(lat), color="red"),  shape = 17, size = 3)  +
scale_color_manual(name =  "Volcanoes", values = c("orange","red"), labels = c("Quaternary Volcanoes","Active Volcanoes")) +
geom_path(data = volQsub2@data, aes(as.numeric(lon), as.numeric(lat)),size = 12, alpha = 0.4, colour = "pink",lineend = "round") +
geom_point(data = sap, aes(x = lon, y = lat), colour = "White")  + geom_text(data = sap, aes(x = lon, y = lat, label = name), hjust = -0.1,family="Times", face="italic", colour="white") +
scaleBar(lon = 144.4, lat = 41, distanceLon = 50, distanceLegend = 30,distanceLat = 15, dist.unit = "km", arrow.length = 60, arrow.distance = 480, arrow.North.size = 4,legend.colour = "white", arrow.North.color = "white", arrow.colour = "blue") +
theme_bw(base_family = "Times", base_size = 10)
# setwd(figsDir)
# phd.ggsave(p2)
hkd
tokyo  <- phd.geocode("Tokyo")
setwd(dataDir)
tokyo  <- phd.geocode("Tokyo")
phd.write.csv(tokyo)
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17)
+ geom_point(data =tokyo, aes(lon,lat), color = "white") +
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
, color="red", shape = 17)
#tokyo  <- phd.geocode("Tokyo")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17)
+ geom_point(data =tokyo, aes(lon,lat), color = "white") +
+ geom_point(data =tokyo, aes(lon,lat, label = name), color = "white")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_point(data =tokyo, aes(lon,lat, label = name), color = "white")
jp
View(tokyo)
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white")
jp
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white", hjust = -0.01
# setwd(figsDir)
jp
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white", vjust = 1
# setwd(figsDir)
# phd.ggsave(p2)
hkd
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white", vjust = 1
# setwd(figsDir)
# phd.ggsave(p2)
hkd
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white", vjust = 1
# setwd(figsDir)
# phd.ggsave(p2)
jp
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white",
vjust = 1)
# setwd(figsDir)
# phd.ggsave(p2)
jp
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_
137.5_35_zoom5_140817_1433.Rds")
source('~/Win7/Air/Dropbox/7src/R/GeoR/inset.R', echo=TRUE)
library(ggmap)
library(ggplot2)
library(gridExtra)
#sp::coordinates(sub)
#phd.getGoogleMap(142.5, 43.5, 7, "hkd")
hkdTerrain  <- readRDS("~/Dropbox/2data/dataProduct/hkd/hkd_google_satellite_142.5_43.5_zoom7_140815_2131.Rds")
#Sapporo  <- phd.geocode(c("Sapporo"))
sap  <- readRDS("~/Dropbox/2data/data/Sapporo_140817_162919.Rds")
basemap  <- hkdTerrain
breaksX  <- seq(139,146, 1)
labelsX=parse(text=paste(breaksX, "^o ", "*E", sep=""))
breaksY  <- seq(41,46, 1)
labelsY=parse(text=paste(breaksY, "^o ", "*N", sep=""))
## Layer0: Base map
hkd  <-  ggmap(basemap, extent = "panel") +
### Layers
geom_point(data = bh_xy, aes(Lon, Lat,fill = grp, size = grp), shape = 21, alpha = 0.9) +
### X
xlab("Lontitude") +
scale_x_continuous(breaks=breaksX, labels=labelsX,expand = c(0.01,0.01)) +
theme(axis.text.y = element_text(angle = 90, hjust = 0.5, vjust = 0)) +
### Y
ylab("Latitude") +
scale_y_continuous(breaks=breaksY, labels=labelsY,expand = c(0.01,0.01)) +
###Legend
### Size
labs(size = "Borehole Depth (m)") +
scale_size_manual(values=c(1,1.5,2,3,4)) +
### fill
scale_fill_brewer("Borehole Depth (m)", palette="Blues") +
### Color
geom_point(data = volQsub@data, aes(as.numeric(lon), as.numeric(lat), color="blue"), shape = 17, alpha = 0.7) +
geom_point(data = volAsub@data, aes(as.numeric(lon), as.numeric(lat), color="red"),  shape = 17, size = 3)  +
scale_color_manual(name =  "Volcanoes", values = c("orange","red"), labels = c("Quaternary Volcanoes","Active Volcanoes")) +
geom_path(data = volQsub2@data, aes(as.numeric(lon), as.numeric(lat)),size = 12, alpha = 0.4, colour = "pink",lineend = "round") +
geom_point(data = sap, aes(x = lon, y = lat), colour = "White")  + geom_text(data = sap, aes(x = lon, y = lat, label = name), hjust = -0.1,family="Times", face="italic", colour="white") +
scaleBar(lon = 144.4, lat = 41, distanceLon = 50, distanceLegend = 30,distanceLat = 15, dist.unit = "km", arrow.length = 60, arrow.distance = 480, arrow.North.size = 4,legend.colour = "white", arrow.North.color = "white", arrow.colour = "blue") +
coord_equal() + theme_bw(base_family = "Times", base_size = 10)
# setwd(figsDir)
# phd.ggsave(p2)
hkd
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white",
vjust = 1) +
coord_equal()+theme_bw()+xlab("")+ylab("")coord_equal()
# setwd(figsDir)
# phd.ggsave(p2)
jp
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white",
vjust = 1) +
coord_equal()+theme_bw()+labs(x=NULL,y=NULL)
# setwd(figsDir)
# phd.ggsave(p2)
jp
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white",
vjust = 1) +
coord_equal()+theme_bw()+labs(x=NULL,y=NULL) +
geom_rect(data = pol, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)
# setwd(figsDir)
# phd.ggsave(p2)
jp
posbox<-data.frame(xmin=xmin,xmax=xmax ,ymin=ymin ,ymax=ymax)
View(posbox)
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat, label = name), color = "white",
vjust = 1) +
coord_equal()+theme_bw()+labs(x=NULL,y=NULL) +
geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)
# setwd(figsDir)
# phd.ggsave(p2)
jp
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(lon,lat), color = "white") +
geom_text(data =tokyo, aes(lon,lat,label = name), color = "white",
vjust = 1) +
geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1) +
coord_equal()+theme_bw()+labs(x=NULL,y=NULL)
# setwd(figsDir)
# phd.ggsave(p2)
jp
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(x = lon, y = lat), color = "white") +
geom_text(data =tokyo, aes(x = lon,y = lat,label = name), color = "white",
vjust = 1) +
geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1) +
coord_equal()+theme_bw()+labs(x=NULL,y=NULL)
# setwd(figsDir)
# phd.ggsave(p2)
jp
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(x = lon, y = lat), color = "white") +
geom_text(data =tokyo, aes(x = lon,y = lat,label = name), color = "white",
vjust = 1) +
geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1) +
coord_equal()+theme_bw()+labs(x=NULL,y=NULL)
jp
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(x = lon, y = lat), color = "white") +
geom_text(data =tokyo, aes(x = lon,y = lat,label = name), color = "white",
vjust = 1) +
geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1) +
coord_equal()+theme_bw()+labs(x=NULL,y=NULL)
jp
#phd.getGoogleMap(lon = 137.5, lat = 35 , zoom = 5, prefix = "jp")
jpbase  <- readRDS("~/Dropbox/2data/dataProduct/jp/jp_google_hybrid_137.5_35_zoom5_140817_1433.Rds")
#tokyo  <- phd.geocode("Tokyo")
tokyo  <- readRDS("~/Dropbox/2data/tokyo_140817_174007.Rds")
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(x = lon, y = lat), color = "white") +
geom_text(data =tokyo, aes(x = lon,y = lat,label = name), color = "white",
vjust = 1) +
geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)
# setwd(figsDir)
# phd.ggsave(p2)
jp
source('~/.active-rstudio-document', echo=TRUE)
jp  <-  ggmap(jpbase, extent = "panel") +
### Layers
geom_point(data = volA@data, aes(as.numeric(lon), as.numeric(lat))
, color="red", shape = 17) +
geom_point(data =tokyo, aes(x = lon, y = lat), color = "white") +
geom_text(data =tokyo, aes(x = lon,y = lat,label = name), color = "white",
vjust = 1)
jp
geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)
jp1  <- jp + geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)
jp1
View(pol)
View(posbox)
summary(jpbase)
hkd + geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)
jp1  <- jp + geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)
jp1
om_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0,
hkd + geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)
jp
hkd + geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)
View(pol)
jp + geom_rect(data = posbox, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1) +
geom_rect(data = pol, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)+
theme(axis.text.x =element_blank(),axis.text.y= element_blank(), axis.ticks=element_blank(),axis.title.x =element_blank(),
axis.title.y= element_blank())
jp + geom_rect(data = pol, aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)+
theme(axis.text.x =element_blank(),axis.text.y= element_blank(), axis.ticks=element_blank(),axis.title.x =element_blank(),
axis.title.y= element_blank())
jp + geom_rect(data = pol, aes(xmin = xmin, xmax = xmin + 1, ymin = ymin, ymax = ymax), alpha=0, colour="red", size = 1, linetype=1)+
theme(axis.text.x =element_blank(),axis.text.y= element_blank(), axis.ticks=element_blank(),axis.title.x =element_blank(),
axis.title.y= element_blank())
jp + geom_rect(data = posbox, aes(xmin = xmin, xmax = xmin + 1, ymin = ymin, ymax = ymin +1), alpha=0, colour="red", size = 1, linetype=1)+
theme(axis.text.x =element_blank(),axis.text.y= element_blank(), axis.ticks=element_blank(),axis.title.x =element_blank(),
axis.title.y= element_blank())
jp
source('~/Win7/Air/Dropbox/7src/R/GeoR/inset.R', echo=TRUE)
colorRampPalette()
colorRampPalette
source('C:/Air/Dropbox/5opts/Rnw2R.R', echo=TRUE)
source('~/Dropbox/5opts/Rnw2R.R', echo=TRUE)
