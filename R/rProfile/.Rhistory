fix(dirlist)
dir.create(dirlist)
dir.create(".", dirlist)
dir.create(dirlist)
dirlist <-  paste(Year, Months, sep='')
fix(dirlist)
dir.create(".", dirlist,showWarnings = TRUE)
dirtable  <- as.table(dirlist)
dirtable  <- as.data.frame(dirlist)
View(dirtable)
class(dirframe)
dirframe  <- as.data.frame(dirlist)
class(dirframe)
dirlist <-  paste(Year, Months, sep='')
dirframe  <- as.data.frame(dirlist)
class(dirframe)
for (i in 1:nrow(dirframe)){
dir.create()
dirlist <-  paste(Year, Months, sep='')
dirframe  <- as.data.frame(dirlist)
class(dirframe)
for (i in 1:nrow(dirframe)){
dir.create(dirframe[u])
for (i in 1:nrow(dirframe)){
dir.create(dirframe[i])
}
dir.create(".", dirlist,showWarnings = TRUE)
dir.create(dirlist)
YMlist <- c()    # Year and Month list e.g. 201212
dirframe  <- as.data.frame(dirlist)
class(dirframe)
for (i in 1:length(dirlist)){
dir.create(dirframe[i])
}
dirlist <-  paste(Year, Months, sep='')
dirframe  <- as.data.frame(dirlist)
class(dirframe)
for (i in 1:length(dirlist)){
dir.create(dirlist[i])
}
Months <- c(1:12)
Year  <- c("2003")
dirlist <-  paste(Year, Months, sep='')
Months <- c(1:12)
Year  <- c("2003")
dirlist <-  paste(Year, Months, sep='')
Months <- c(1:12)
M <- c(1:12)
c(1:12)
Year  <- c("2003")
Months  <- c(1:12)
Months  <- c("1:12")
Year  <- c("2003")
Months  <- c(1:12)
dirlist <-  paste(Year, Months, sep='')
fix(dirlist)
Months  <- c(01:12)
dirlist <-  paste(Year, Months, sep='')
fix(dirlist)
Months  <- c("01":"12")
dirlist <-  paste(Year, Months, sep='')
fix(dirlist)
Year  <- c("2003")
Months  <- c("01":"12")
#Year  <- c("2003", "2004")
dirlist <-  paste(Year, Months, sep='')
fix(dirlist)
Year  <- c("2003")
Months  <- c("01","02","03","04","05","06","07","08","09","10","11","12")
#Year  <- c("2003", "2004")
dirlist <-  paste(Year, Months, sep='')
fix(dirlist)
class(dirframe)
length(dirlist)
for (i in 1:length(dirlist)){
dir.create(dirlist[i])
}
class(Year)
getwd()
library(XML)
url  <- "http://www.sapc.jaxa.jp/company/01-tankai_co_jp.html"
xmlTable.l <- readHTMLTable(url)
htmlParse(url)
q()
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
updateR() # this will only work AFTER R 3.0.0 will be released to your CRAN mirror
twitter  <- c("twitteR","wordcloud","igraph")
install.packages()
install.packages(twitter)
require(twitteR)
require(wordcloud)
require(igraph)
tweets <- searchTwitter("#地熱", n = 250)
tweets <- searchTwitter("#Geothermal", n = 250)
tweets <- searchTwitter("#Geothermal", n = 250)
require(twitteR)
tweets <- searchTwitter("#Geothermal", n = 250)
require(ROAuth)
tweets <- searchTwitter("#Geothermal", n = 250)
library(maps)
plot("japan")
plot(japan)
plot("states")
plot("usa")
plot(map("japan"))
map("usa")
willing <- function() {
# ==============================================================================
# What is Today
# ==============================================================================
Today            <- Sys.Date()
TodayY           <- as.numeric(format(Today, format = "%Y"))
TodayD           <- as.numeric(format(Today, format = "%m.%d"))
# Willing's love sotry start here!
# ==============================================================================
# About us
# ==============================================================================
# Birthday01 : Waitting for our baby
# Birthday02  <- strptime("Sun,1984-01-08 20:20:20", "%a, %Y-%m-%d %H:%M:%S")
Birthday02  <- strptime("1984-01-08 20:20:20", "%Y-%m-%d %H:%M:%S")
Birthday02Y <- as.numeric(format(Birthday02, format = "%Y"))
Birthday02D <- as.numeric(format(Birthday02, format = "%m.%d"))
sanwei2007 <- c(85, 65, 88)
BirthDays02Y <- as.double(TodayY - Birthday02Y)
BirthDays02M <- as.integer(BirthDays02Y * 12)
BirthDays02W <- as.integer(difftime(Today, Birthday02, units = "weeks"))
BirthDays02D <- as.integer(difftime(Today, Birthday02, units = "days"))
BirthDays02H <- as.integer(difftime(Today, Birthday02, units = "hours"))
BirthDays02Min <- as.integer(difftime(Today, Birthday02, units = "mins"))
BirthDays02S <- as.integer(difftime(Today, Birthday02, units = "secs"))
# Birthday05
Birthday05  <- strptime("1983-12-03 21:21:21", "%Y-%m-%d %H:%M:%S")
Birthday05Y <- as.numeric(format(Birthday05, format = "%Y"))
Birthday05D <- as.numeric(format(Birthday05, format = "%m.%d"))
BirthDays05Y <- as.double(TodayY - Birthday05Y)
BirthDays05M <- as.integer(BirthDays05Y * 12)
BirthDays05W <- as.integer(difftime(Today, Birthday05, units = "weeks"))
BirthDays05D <- as.integer(difftime(Today, Birthday05, units = "days"))
BirthDays05H <- as.integer(difftime(Today, Birthday05, units = "hours"))
BirthDays05Min <- as.integer(difftime(Today, Birthday05, units = "mins"))
BirthDays05S <- as.integer(difftime(Today, Birthday05, units = "secs"))
# ==============================================================================
# First Meet Story
# ==============================================================================
FirstMeet  <- strptime("2007.01.02", "%Y.%m.%d")
FirstMeetY <- as.numeric(format(FirstMeet, format = "%Y"))
FirstMeetD <- as.numeric(format(FirstMeet, format = "%m.%d"))
FirstMeetat <- "North Gate of Sichuan University, Chengdu, China"
MeetDaysY   <- as.double(TodayY -        FirstMeetY)
MeetDaysM   <- as.integer(MeetDaysY * 12)
MeetDaysW   <- as.integer(difftime(Today, FirstMeet, units = "weeks"))
MeetDaysD   <- as.integer(difftime(Today, FirstMeet, units = "days"))
MeetDaysH   <- as.integer(difftime(Today, FirstMeet, units = "hours"))
MeetDaysMin <- as.integer(difftime(Today, FirstMeet, units = "mins"))
MeetDaysS   <- as.integer(difftime(Today, FirstMeet, units = "secs"))
# ==============================================================================
# Our Marriage 20080807, qixi
# ==============================================================================
Marriage  <- strptime("2008.08.07", "%Y.%m.%d")
MarriageY <- as.numeric(format(Marriage, format = "%Y"))
MarriageD <- as.numeric(format(Marriage, format = "%m.%d"))
# ==============================================================================
# Our Wedding, Soon
# ==============================================================================
Wedding  <- strptime("2014.02.09", "%Y.%m.%d")
WeddingY <- as.numeric(format(Wedding, format = "%Y"))
WeddingD <- as.numeric(format(Wedding, format = "%m.%d"))
# ==============================================================================
# Our Anniversaries
# ==============================================================================
HappyBirthday02  <- isTRUE(TodayD == Birthday02D)
HappyBirthday05  <- isTRUE(TodayD == Birthday05D)
MeetAnniversary <- isTRUE(TodayD == FirstMeetD)
MarryAnniversary <- isTRUE(TodayD == MarriageD)
WeddingAnniversary <- isTRUE(TodayD == WeddingD)
if(HappyBirthday02) {
Happy <- sprintf("Happy %dth Birthday to You Dear Baby, I Love You Forever! *^_^*", BirthDays02Y)}
if(MerryAnniversary) {
Happy <- sprintf ("Merry %dth Anniversay Willing", MarryDaysY)}
if(WeddingAnniversary) {
Happy <- sprintf ("Merry %dth Anniversay Willing", MarryDaysY)}
Happy02 <- sprintf("Now is the time after your birth: %dth Years %dth Monthsï¼%dth Weeksï¼%dth Daysï¼%dth Hoursï¼%dth Minutes, %dth Seconds......",BirthDays02Y, BirthDays02M,BirthDays02W,BirthDays02D,BirthDays02H,BirthDays02Min,BirthDays02S)
Meet02 <- sprintf("Now is the time after our first met: %dth Years %dth Monthsï¼%dth Weeksï¼%dth Daysï¼%dth Hoursï¼%dth Minutes, %dth Seconds......", MeetDaysY, MeetDaysM,MeetDaysW,MeetDaysD,MeetDaysH,MeetDaysMin,MeetDaysS)
LoveYouForever <- sprintf("Every seconds with you are happy and full of love*+_+*")
willingdays.list <- list("Happy_Days" = Happy,
"Days_of_02" = Happy02,
"Days_with_02" = Meet02,
"Messeage" = LoveYouForever
)
return(willingdays.list)
# Todo: Nongli, Chinese, Multi Language, Beautiful word
}
willing()
willing()
if(MarryAnniversary) {
Happy <- sprintf ("Merry %dth Anniversay Willing", MarryDaysY)}
if(WeddingAnniversary) {
Happy <- sprintf ("Merry %dth Anniversay Willing", MarryDaysY)}
Happy02 <- sprintf("Now is the time after your birth: %dth Years %dth Monthsï¼%dth Weeksï¼%dth Daysï¼%dth Hoursï¼%dth Minutes, %dth Seconds......",BirthDays02Y, BirthDays02M,BirthDays02W,BirthDays02D,BirthDays02H,BirthDays02Min,BirthDays02S)
Meet02 <- sprintf("Now is the time after our first met: %dth Years %dth Monthsï¼%dth Weeksï¼%dth Daysï¼%dth Hoursï¼%dth Minutes, %dth Seconds......", MeetDaysY, MeetDaysM,MeetDaysW,MeetDaysD,MeetDaysH,MeetDaysMin,MeetDaysS)
LoveYouForever <- sprintf("Every seconds with you are happy and full of love*+_+*")
willingdays.list <- list("Happy_Days" = Happy,
"Days_of_02" = Happy02,
"Days_with_02" = Meet02,
"Messeage" = LoveYouForever
)
return(willingdays.list)
# Todo: Nongli, Chinese, Multi Language, Beautiful word
}
willing()
willing <- function() {
# ==============================================================================
Today            <- Sys.Date()
# ==============================================================================
# ==============================================================================
Birthday02  <- strptime("1984-01-08 20:20:20", "%Y-%m-%d %H:%M:%S")
sanwei2007 <- c(85, 65, 88)
BirthDays02M <- as.integer(BirthDays02Y * 12)
BirthDays02H <- as.integer(difftime(Today, Birthday02, units = "hours"))
BirthDays02S <- as.integer(difftime(Today, Birthday02, units = "secs"))
# Birthday05
Birthday05D <- as.numeric(format(Birthday05, format = "%m.%d"))
BirthDays05Y <- as.double(TodayY - Birthday05Y)
BirthDays05W <- as.integer(difftime(Today, Birthday05, units = "weeks"))
BirthDays05D <- as.integer(difftime(Today, Birthday05, units = "days"))
BirthDays05H <- as.integer(difftime(Today, Birthday05, units = "hours"))
BirthDays05S <- as.integer(difftime(Today, Birthday05, units = "secs"))
# First Meet Story
FirstMeetY <- as.numeric(format(FirstMeet, format = "%Y"))
FirstMeetD <- as.numeric(format(FirstMeet, format = "%m.%d"))
FirstMeetat <- "North Gate of Sichuan University, Chengdu, China"
MeetDaysY   <- as.double(TodayY -        FirstMeetY)
MeetDaysW   <- as.integer(difftime(Today, FirstMeet, units = "weeks"))
MeetDaysD   <- as.integer(difftime(Today, FirstMeet, units = "days"))
MeetDaysS   <- as.integer(difftime(Today, FirstMeet, units = "secs"))
# Our Marriage 20080807, qixi
Marriage  <- strptime("2008.08.07", "%Y.%m.%d")
# ==============================================================================
# Our Wedding, Soon
# ==============================================================================
Wedding  <- strptime("2014.02.09", "%Y.%m.%d")
WeddingD <- as.numeric(format(Wedding, format = "%m.%d"))
# ==============================================================================
# Our Anniversaries
# ==============================================================================
MeetAnniversary <- isTRUE(TodayD == FirstMeetD)
WeddingAnniversary <- isTRUE(TodayD == WeddingD)
if(HappyBirthday02) {
Happy <- sprintf("Happy %dth Birthday to You Dear Baby, I Love You Forever! *^_^*", BirthDays02Y)}
if(MarryAnniversary) {
Happy <- sprintf ("Merry %dth Anniversay Willing", MarryDaysY)}
if(WeddingAnniversary) {
Happy <- sprintf ("Merry %dth Anniversay Willing", MarryDaysY)}
Happy02 <- sprintf("Now is the time after your birth: %dth Years %dth Monthsï¼%dth Weeksï¼%dth Daysï¼%dth Hoursï¼%dth Minutes, %dth Seconds......",BirthDays02Y, BirthDays02M,BirthDays02W,BirthDays02D,BirthDays02H,BirthDays02Min,BirthDays02S)
Meet02 <- sprintf("Now is the time after our first met: %dth Years %dth Monthsï¼%dth Weeksï¼%dth Daysï¼%dth Hoursï¼%dth Minutes, %dth Seconds......", MeetDaysY, MeetDaysM,MeetDaysW,MeetDaysD,MeetDaysH,MeetDaysMin,MeetDaysS)
LoveYouForever <- sprintf("Every seconds with you are happy and full of love*+_+*")
willingdays.list <- list("Happy_Days" = Happy,
"Days_of_02" = Happy02,
"Messeage" = LoveYouForever
)
return(willingdays.list)
Birthday02Y <- as.numeric(format(Birthday02, format = "%Y"))
willing()
HappyBirthday05  <- isTRUE(TodayD == Birthday05D)
# Todo: Nongli, Chinese, Multi Language, Beautiful word
MeetDaysH   <- as.integer(difftime(Today, FirstMeet, units = "hours"))
BirthDays05M <- as.integer(BirthDays05Y * 12)
}
TodayD           <- as.numeric(format(Today, format = "%m.%d"))
Birthday05  <- strptime("1983-12-03 21:21:21", "%Y-%m-%d %H:%M:%S")
# ==============================================================================
HappyBirthday02  <- isTRUE(TodayD == Birthday02D)
# Willing's love sotry start here!
"Days_with_02" = Meet02,
# Birthday01 : Waitting for our baby
BirthDays02W <- as.integer(difftime(Today, Birthday02, units = "weeks"))
BirthDays02D <- as.integer(difftime(Today, Birthday02, units = "days"))
# About us
BirthDays02Y <- as.double(TodayY - Birthday02Y)
# What is Today
# ==============================================================================
MeetDaysM   <- as.integer(MeetDaysY * 12)
FirstMeet  <- strptime("2007.01.02", "%Y.%m.%d")
Birthday02D <- as.numeric(format(Birthday02, format = "%m.%d"))
MarriageY <- as.numeric(format(Marriage, format = "%Y"))
TodayY           <- as.numeric(format(Today, format = "%Y"))
BirthDays05Min <- as.integer(difftime(Today, Birthday05, units = "mins"))
WeddingY <- as.numeric(format(Wedding, format = "%Y"))
# ==============================================================================
MeetDaysMin <- as.integer(difftime(Today, FirstMeet, units = "mins"))
# ==============================================================================
Birthday05Y <- as.numeric(format(Birthday05, format = "%Y"))
MarriageD <- as.numeric(format(Marriage, format = "%m.%d"))
MarryAnniversary <- isTRUE(TodayD == MarriageD)
# Birthday02  <- strptime("Sun,1984-01-08 20:20:20", "%a, %Y-%m-%d %H:%M:%S")
# ==============================================================================
BirthDays02Min <- as.integer(difftime(Today, Birthday02, units = "mins"))
willing()
Today            <- Sys.Date()
TodayY           <- as.numeric(format(Today, format = "%Y"))
TodayD           <- as.numeric(format(Today, format = "%m.%d"))
Birthday02  <- strptime("1984-01-08 20:20:20", "%Y-%m-%d %H:%M:%S")
Birthday02Y <- as.numeric(format(Birthday02, format = "%Y"))
Birthday02D <- as.numeric(format(Birthday02, format = "%m.%d"))
sanwei2007 <- c(85, 65, 88)
BirthDays02Y <- as.double(TodayY - Birthday02Y)
BirthDays02M <- as.integer(BirthDays02Y * 12)
BirthDays02W <- as.integer(difftime(Today, Birthday02, units = "weeks"))
BirthDays02D <- as.integer(difftime(Today, Birthday02, units = "days"))
BirthDays02H <- as.integer(difftime(Today, Birthday02, units = "hours"))
BirthDays02Min <- as.integer(difftime(Today, Birthday02, units = "mins"))
BirthDays02S <- as.integer(difftime(Today, Birthday02, units = "secs"))
# Birthday05
Birthday05  <- strptime("1983-12-03 21:21:21", "%Y-%m-%d %H:%M:%S")
Birthday05Y <- as.numeric(format(Birthday05, format = "%Y"))
Birthday05D <- as.numeric(format(Birthday05, format = "%m.%d"))
BirthDays05Y <- as.double(TodayY - Birthday05Y)
BirthDays05M <- as.integer(BirthDays05Y * 12)
BirthDays05W <- as.integer(difftime(Today, Birthday05, units = "weeks"))
BirthDays05D <- as.integer(difftime(Today, Birthday05, units = "days"))
BirthDays05H <- as.integer(difftime(Today, Birthday05, units = "hours"))
BirthDays05Min <- as.integer(difftime(Today, Birthday05, units = "mins"))
BirthDays05S <- as.integer(difftime(Today, Birthday05, units = "secs"))
# ==============================================================================
# First Meet Story
# ==============================================================================
FirstMeet  <- strptime("2007.01.02", "%Y.%m.%d")
FirstMeetY <- as.numeric(format(FirstMeet, format = "%Y"))
FirstMeetD <- as.numeric(format(FirstMeet, format = "%m.%d"))
FirstMeetat <- "North Gate of Sichuan University, Chengdu, China"
MeetDaysY   <- as.double(TodayY -        FirstMeetY)
MeetDaysM   <- as.integer(MeetDaysY * 12)
MeetDaysW   <- as.integer(difftime(Today, FirstMeet, units = "weeks"))
MeetDaysD   <- as.integer(difftime(Today, FirstMeet, units = "days"))
MeetDaysH   <- as.integer(difftime(Today, FirstMeet, units = "hours"))
MeetDaysMin <- as.integer(difftime(Today, FirstMeet, units = "mins"))
MeetDaysS   <- as.integer(difftime(Today, FirstMeet, units = "secs"))
# ==============================================================================
# Our Marriage 20080807, qixi
# ==============================================================================
Marriage  <- strptime("2008.08.07", "%Y.%m.%d")
MarriageY <- as.numeric(format(Marriage, format = "%Y"))
MarriageD <- as.numeric(format(Marriage, format = "%m.%d"))
# ==============================================================================
# Our Wedding, Soon
# ==============================================================================
Wedding  <- strptime("2014.02.09", "%Y.%m.%d")
WeddingY <- as.numeric(format(Wedding, format = "%Y"))
WeddingD <- as.numeric(format(Wedding, format = "%m.%d"))
# ==============================================================================
# Our Anniversaries
# ==============================================================================
HappyBirthday02  <- isTRUE(TodayD == Birthday02D)
HappyBirthday05  <- isTRUE(TodayD == Birthday05D)
MeetAnniversary <- isTRUE(TodayD == FirstMeetD)
MarryAnniversary <- isTRUE(TodayD == MarriageD)
WeddingAnniversary <- isTRUE(TodayD == WeddingD)
if(HappyBirthday02) {
Happy <- sprintf("Happy %dth Birthday to You Dear Baby, I Love You Forever! *^_^*", BirthDays02Y)}
if(MarryAnniversary) {
Happy <- sprintf ("Merry %dth Anniversay Willing", MarryDaysY)}
if(WeddingAnniversary) {
Happy <- sprintf ("Merry %dth Anniversay Willing", MarryDaysY)}
Happy02 <- sprintf("Now is the time after your birth: %dth Years %dth Monthsï¼%dth Weeksï¼%dth Daysï¼%dth Hoursï¼%dth Minutes, %dth Seconds......",BirthDays02Y, BirthDays02M,BirthDays02W,BirthDays02D,BirthDays02H,BirthDays02Min,BirthDays02S)
Meet02 <- sprintf("Now is the time after our first met: %dth Years %dth Monthsï¼%dth Weeksï¼%dth Daysï¼%dth Hoursï¼%dth Minutes, %dth Seconds......", MeetDaysY, MeetDaysM,MeetDaysW,MeetDaysD,MeetDaysH,MeetDaysMin,MeetDaysS)
LoveYouForever <- sprintf("Every seconds with you are happy and full of love*+_+*")
willingdays.list <- list("Happy_Days" = Happy,
"Days_of_02" = Happy02,
"Days_with_02" = Meet02,
"Messeage" = LoveYouForever
)
return(willingdays.list)
# Todo: Nongli, Chinese, Multi Language, Beautiful word
}
willing()
willing()
Happy02 <- sprintf("Now is the time after your birth: %dth Years,%dth Months, %dth Weeks,%dth Dasy,%dth Hoursï¼%dth Minutes, %dth Seconds......",BirthDays02Y, BirthDays02M,BirthDays02W,BirthDays02D,BirthDays02H,BirthDays02Min,BirthDays02S)
Meet02 <- sprintf("Now is the time after our first met: %dth Years %dth Months,%dth Week,¼%dth Da,ï¼%dth Ho,sï¼%dth Minutes, %dth Seconds......", MeetDaysY, MeetDaysM,MeetDaysW,MeetDaysD,MeetDaysH,MeetDaysMin,MeetDaysS)
#Fisrt Version 20130108
#This Version 20140108
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
willing()
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
willing()
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
willing()
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
willing()
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
willing()
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
willing()
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
willing()
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
source('~/Dropbox/workbox/R/02/BirthDay02/willing.R')
willing()
source('~/Dropbox/config/Rconfig/updateR/updateR.win.R')
source('~/Dropbox/config/Rconfig/updateR/updateR.win.R', echo=TRUE)
install.packages(rgl)
install.packages("rgl")
install.packages("misc3d")
install.packages("scatterplot3d")
install.packages("InR")
install.packages("InR")
install.packages("IntR")
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics_c173_c273/soil_complete.txt", header=TRUE)
View(a)
g1 <- gstat(id="log_lead", formula = log(lead)~1, locations = ~x+y, data = a)
library(gstat)
library(gstat)
install.packages("gstat")
library(gstat)
g1 <- gstat(id="log_lead", formula = log(lead)~1, locations = ~x+y, data = a)
library(gstat)
a <- read.table("http://www.stat.ucla.edu/~nchristo/statistics_c173_c273/soil_complete.txt", header=TRUE)
g1 <- gstat(id="log_lead", formula = log(lead)~1, locations = ~x+y, data = a)
plot(variogram(g1))
g <- gstat(id="log_lead", formula = log(lead)~1, locations = ~x+y, data = a)
v.fit <- fit.variogram(variogram(g), vgm(0.5,"Sph",1000,0.1))
vm <- variogram(g1)
vm.fit <- fit.lmc(vm, g1, model=v.fit)
plot(variogram(g1),vm.fit)
plot(variogram(g1),vm.fit)
x.range <- as.integer(range(a[,1]))
y.range <- as.integer(range(a[,2]))
grd <- expand.grid(x=seq(from=x.range[1], to=x.range[2], by=50),
y=seq(from=y.range[1], to=y.range[2], by=50))
#Perform co-kriging predictions:
ck <- predict.gstat(vm.fit, grd)
#Perform cross-validation:
cv_ck <- gstat.cv(vm.fit)
2300*6
13800*5
library(XML)
# http://xccds1977.blogspot.jp/2012/06/ggmap.html
webpage <-'http://data.earthquake.cn/datashare/globeEarthquake_csn.html'
tables <- readHTMLTable(webpage,stringsAsFactors = FALSE)
raw.df <- tables[[6]]
#data <- raw[-1,c('V1','V3','V4')]
data <- raw.df[,c(1,3,4)]
#names(data) <- c('date','lan','lon')
colnames(data) <- c('date','lan','lon')
data$lan <- as.numeric(data$lan)
data$lon <- as.numeric(data$lon)
data$date <- as.Date(data$date,  "%Y-%m-%d")
ggmap(get_googlemap(center = 'china', zoom=4, maptype='terrain'),extent='device')+
geom_point(data=data,aes(x=lon,y=lan),colour = 'red',alpha=0.7)+
stat_density2d(aes(x=lon,y=lan,fill=..level..,alpha=..level..),
size=2,bins=4,data=data,geom='polygon')+
opts(legend.position = "none")
plotfunc <- function(x) {
df <- subset(data,date <= x)
df$lan <- as.numeric(df$lan)
df$lon <- as.numeric(df$lon)
p <- ggmap(get_googlemap(center = 'china', zoom=4,maptype='terrain'),,extent='device')+
geom_point(data=df,aes(x=lon,y=lan),colour = 'red',alpha=0.7)
}
time <- sort(unique(data$date))
saveMovie(for( i in time) print(plotfunc(i)))
library(ggmap)
install.packages("animation")
library(XML)
library(ggmap)
library(animation )
# http://xccds1977.blogspot.jp/2012/06/ggmap.html
webpage <-'http://data.earthquake.cn/datashare/globeEarthquake_csn.html'
tables <- readHTMLTable(webpage,stringsAsFactors = FALSE)
raw.df <- tables[[6]]
#data <- raw[-1,c('V1','V3','V4')]
data <- raw.df[,c(1,3,4)]
#names(data) <- c('date','lan','lon')
colnames(data) <- c('date','lan','lon')
data$lan <- as.numeric(data$lan)
data$lon <- as.numeric(data$lon)
data$date <- as.Date(data$date,  "%Y-%m-%d")
ggmap(get_googlemap(center = 'china', zoom=4, maptype='terrain'),extent='device')+
geom_point(data=data,aes(x=lon,y=lan),colour = 'red',alpha=0.7)+
stat_density2d(aes(x=lon,y=lan,fill=..level..,alpha=..level..),
size=2,bins=4,data=data,geom='polygon')+
opts(legend.position = "none")
install.packages(c("boot", "class", "cluster", "evaluate", "extrafont", "foreign", "KernSmooth", "markdown", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spacetime", "spatial"))
install.packages("ProjectTemplate")
library(ProjectTemplate)
load.project()
library(ProjectTemplate)
create.project("chap1")
tCheck <- function(x) {
check.l <- list("Memory allocated" = print(object.size(x), units = "Mb"),
Sys.getenv('R_LIBS_USER')
Sys.getenv('R_LIBS')
Sys.getenv('R_USER')
Sys.getenv('R_DOC_DIR')
Sys.getenv('HOME')
Sys.getenv('R_LIBS_USER')
Sys.getenv('R_LIBS')
Sys.getenv('R_USER')
Sys.getenv('R_DOC_DIR')
Sys.getenv('HOME')
"Dimensions of data" = dim(x),
Sys.getenv('R_LIBS')
Sys.getenv('R_LIBS_USER')
getOption("repos")
setwd("~/Dropbox/config/Rconfig/Rprofile/")
source("01_Repos.Rprofile.R")
Sys.getenv('HOME')
Sys.getenv('R_HOME')
##------ [/home/tian/Win7/Air/Dropbox/config/Rconfig/Rprofile] Mon Apr 28 09:45:01 2014 ------##
